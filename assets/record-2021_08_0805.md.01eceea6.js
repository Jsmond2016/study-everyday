import{_ as e,o as a,c as r,V as t}from"./chunks/framework.e0e258e1.js";const g=JSON.parse('{"title":"0805","description":"","frontmatter":{},"headers":[],"relativePath":"record-2021/08/0805.md","filePath":"record-2021/08/0805.md"}'),l={name:"record-2021/08/0805.md"},o=t('<h1 id="_0805" tabindex="-1">0805 <a class="header-anchor" href="#_0805" aria-label="Permalink to &quot;0805&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/AmmoniteShell_ZH-CN9232274077_1920x1080.jpg" alt=""></p><h2 id="工作" tabindex="-1">工作 <a class="header-anchor" href="#工作" aria-label="Permalink to &quot;工作&quot;">​</a></h2><ul><li><strong>1-保留空格换行等原格式问题</strong>：昨天想的方案是使用 <code>split(&#39;\\n&#39;), str.replace(/\\s/g, &#39;&amp;ngsp;&#39;)</code> 方案，尝试后结果不行。网上搜索答案，发现有对应的<a href="https://www.cnblogs.com/niyan/p/14144889.html?ivk_sa=1024320u" target="_blank" rel="noreferrer">解决方案</a><ul><li>设置样式 <code>white-space: pre;</code></li><li>使用 <code>&lt;pre&gt;str&lt;/pre&gt;</code> 标签</li></ul></li><li><strong>2-代码结构优化问题</strong>：今天老前端亮哥帮我 review 代码，发现了自己的很多问题 <ul><li><strong>组件封装要独立</strong>，若某个方法只有自己用到，那么定义在自己的组件内部即可，不用从外面一层层传进来；不然情况就是，所有定义的组件都是受控组件，所有方法都在最外层的父组件上，瘦的太瘦，胖的太胖；同时不好 review 代码，传来传去，一个个文件跳来跳去；</li><li><strong>重复代码太多</strong>：编辑页和查看页内容基本是一致的，尽可能的复用组件（要求组件封装和开口优雅），避免重复代码导致某些 bug 修改时只修改了一半。</li><li>组件在定义和使用的时候，最好的考察方式就是，最后使用该组件的时候，是不是只需要使用 <code>&lt;Component {...props} /&gt;</code> 即可？如果不是，说明封装还不够好，需要<strong>梳理逻辑看看那些逻辑可以放到组件内部，让它又独立又完整</strong>。</li></ul></li><li>分页问题复杂度：通常分页需求，我们考虑的都是比较简单；实际上，它也可以很复杂：比如，同一个页面新开了 多个 tab，当前页页数 为 10，这页只有1条数据；但是在其他 tab 下删除了第 8,9 页数据，那么这个 tab 如果删除这个数据后查询，传参是 10 还是 9 呢？显然，传 10， 9， 8 都是不对的。</li></ul><p>那么，难道每次查到结果时空就递归分页减 1 后再查，知道有数据为止吗？这样会导致发的请求太多了，响应时间太久。</p><p>一个比较好的方式就是，当发现响应结果数据为空时，直接回到第一页，这样就避免上述重复请求和空数据问题；因为即使第 1 页数据是空，那就让它空，不用在意。</p><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6989461400535973896" target="_blank" rel="noreferrer">面试官：请手动实现一个Sass-loader</a> 简单版本 loader</li><li><a href="https://juejin.cn/post/6992754161221632030" target="_blank" rel="noreferrer">多图详解，一次性搞懂Webpack Loader</a> 深入版本 loader</li></ul><h2 id="面经" tabindex="-1">面经 <a class="header-anchor" href="#面经" aria-label="Permalink to &quot;面经&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6992767550543265829" target="_blank" rel="noreferrer">前端万字面经——基础篇</a></li></ul><h2 id="明日计划" tabindex="-1">明日计划 <a class="header-anchor" href="#明日计划" aria-label="Permalink to &quot;明日计划&quot;">​</a></h2><ul><li>resize 事件添加防抖操作</li></ul><h2 id="todos" tabindex="-1">TODOS <a class="header-anchor" href="#todos" aria-label="Permalink to &quot;TODOS&quot;">​</a></h2><ul><li>react-dnd 使用总结</li></ul>',14),i=[o];function n(s,c,d,h,p,u){return a(),r("div",null,i)}const b=e(l,[["render",n]]);export{g as __pageData,b as default};
