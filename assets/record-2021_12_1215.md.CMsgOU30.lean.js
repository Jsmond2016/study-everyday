import{_ as a,c as t,a2 as l,o as n}from"./chunks/framework.ek9jOonm.js";const r="/study-everyday/assets/pointer-events.DhngLLOM.png",s="/study-everyday/assets/draggable.BQ-Dwhe_.png",b=JSON.parse('{"title":"1215 今日总结","description":"","frontmatter":{},"headers":[],"relativePath":"record-2021/12/1215.md","filePath":"record-2021/12/1215.md"}'),o={name:"record-2021/12/1215.md"};function i(p,e,c,d,h,u){return n(),t("div",null,e[0]||(e[0]=[l('<h1 id="_1215-今日总结" tabindex="-1">1215 今日总结 <a class="header-anchor" href="#_1215-今日总结" aria-label="Permalink to &quot;1215 今日总结&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/HippieTown_ZH-CN0980866245_1920x1080.jpg" alt=""></p><h2 id="今日工作" tabindex="-1">今日工作 <a class="header-anchor" href="#今日工作" aria-label="Permalink to &quot;今日工作&quot;">​</a></h2><blockquote><p>问题，原因，解决方式，优化，巧妙实现</p></blockquote><p><strong>问题</strong></p><ul><li>问题1：拖拽边界控制模糊：参考微信和QQ图片查看器的实现原理；</li><li>问题2：导致拖拽不丝滑：</li></ul><p><strong>原因</strong></p><ul><li>问题1：待研究#TODO</li><li>问题2：拖拽区域小，快速拖动时候，拖拽元素跟不上鼠标，鼠标移出拖拽区域触发其他元素事件时导致拖拽状态错乱；</li></ul><p><strong>解决</strong></p><p><img src="'+r+`" alt=""></p><ul><li>使用 <code>pointer-events: none;</code> 暂时将影响的元素的事件干掉，后续使用 <code>pointer-events: auto</code> 还原；</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pointer-events 属性值: auto | none | visiblepainted | visiblefill | visiblestroke | visible | painted | fill | stroke | all;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>最常用：以下2种</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- auto：可以使用指针事件。</span></span>
<span class="line"><span>- none：禁用指针事件，需要注意的是，当禁用指针的的元素有子/父元素时，在事件冒泡/捕获阶段，事件将在其子/父元素触发。</span></span></code></pre></div><p><strong>参考资料</strong></p><ul><li><a href="https://www.cnblogs.com/kunmomo/p/11752669.html" target="_blank" rel="noreferrer">非常有用的pointer-events属性</a></li><li><a href="https://juejin.cn/post/6938439210453958692" target="_blank" rel="noreferrer">原生JS图片拖动、缩放、边界等问题总结</a></li><li><a href="https://github.com/ysx-hidden/DOMStudy/blob/master/drag.html" target="_blank" rel="noreferrer">代码/github-原生JS图片拖动、缩放、边界等问题总结</a> 待研究#TODO</li></ul><p><strong>新知识</strong></p><p><img src="`+s+'" alt=""></p><ul><li><a href="https://www.jianshu.com/p/d1975493b5ea" target="_blank" rel="noreferrer">什么是 React.Children.only</a></li><li><a href="https://github.com/react-grid-layout/react-draggable" target="_blank" rel="noreferrer">灵感来源-react-draggable源码</a> 无意间看到</li></ul><p>作用：</p><ul><li>只会返回一个 child。如果不止一个 child，程序报错，终止执行，避免开发者错传组件；</li></ul><p>其他：</p><ul><li><code>React.Children.map</code> 循环</li><li><code>React.Children.forEach</code> 循环</li><li><code>React.Children.count</code> 检查一个组件有多少个 children</li><li><code>React.Children.toArray</code> 转换为数组</li><li><code>React.cloneElement</code> 克隆元素</li></ul><h2 id="项目-博客推荐" tabindex="-1">项目/博客推荐 <a class="header-anchor" href="#项目-博客推荐" aria-label="Permalink to &quot;项目/博客推荐&quot;">​</a></h2><blockquote><p>值得学习的项目/作者</p></blockquote><ul><li><a href="https://www.lebronchao.com/about/" target="_blank" rel="noreferrer">LeBronChao 的博客</a> 优秀的应届生，字节就职</li><li><a href="https://juejin.cn/user/3913917127467805/posts" target="_blank" rel="noreferrer">前端LeBron-掘金</a></li></ul>',24)]))}const m=a(o,[["render",i]]);export{b as __pageData,m as default};
