import{_ as r,c as t,ag as a,o as l}from"./chunks/framework.BFjg9GqD.js";const o="/study-everyday/assets/git-ignore.CBaWD4f6.png",i="/study-everyday/assets/0331-1.CnsoEvXb.png",n="/study-everyday/assets/0331-2.1ZWViKKf.png",b=JSON.parse('{"title":"0331 今日总结","description":"","frontmatter":{},"headers":[],"relativePath":"record-2022/03/0331.md","filePath":"record-2022/03/0331.md"}'),s={name:"record-2022/03/0331.md"};function p(h,e,c,u,f,g){return l(),t("div",null,e[0]||(e[0]=[a('<h1 id="_0331-今日总结" tabindex="-1">0331 今日总结 <a class="header-anchor" href="#_0331-今日总结" aria-label="Permalink to &quot;0331 今日总结&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/AnniEiffel_ZH-CN8273124420_1920x1080.jpg" alt=""></p><h2 id="今日工作" tabindex="-1">今日工作 <a class="header-anchor" href="#今日工作" aria-label="Permalink to &quot;今日工作&quot;">​</a></h2><blockquote><p>问题，原因，解决方式，优化，巧妙实现，新知识</p></blockquote><ul><li><p><strong>Taro 开发：</strong> 近期的工作是使用 Taro 开发一个小程序，看了第一版 ui 图，其中可能涉及到这几难点：</p><ul><li>表格：折叠，冻结，滚动</li><li>虚拟列表</li></ul></li><li><p><strong>相关资料:</strong></p><ul><li>冻结滚动：<a href="https://codepen.io/paulobrien/pen/gWoVzN" target="_blank" rel="noreferrer">https://codepen.io/paulobrien/pen/gWoVzN</a></li><li>折叠：<a href="https://codepen.io/so5/pen/QWwpLrz" target="_blank" rel="noreferrer">https://codepen.io/so5/pen/QWwpLrz</a></li></ul></li><li><p><strong>问题：</strong> git ignore 没有效果：</p></li></ul><p><img src="'+o+'" alt=""></p><h2 id="今日心情" tabindex="-1">今日心情 <a class="header-anchor" href="#今日心情" aria-label="Permalink to &quot;今日心情&quot;">​</a></h2><blockquote><p>所见所想，有感而发</p></blockquote><ul><li><strong>学习状态下降：</strong> 近期都没有每天记录学习状态了，果然是这样：一件事情若放下了超过一周时间，就很难再坚持下去；坚持是难受的，但是还是需要坚持！！</li><li><strong>复习态度懒散：</strong> 当前，自己的简历还没有完善好，复习题、leetcode 题目都还没沉下心来记忆；需要专心！！</li><li><strong>工具不趁手了：</strong> Typora 收费了，之前一直都是用的旧版本，最近旧版本也强制不允许使用了，只能使用 VS Code 结合 md 插件使用了，好感度差一些，也就更没有写文的欲望了；</li></ul><h2 id="文章更新" tabindex="-1">文章更新 <a class="header-anchor" href="#文章更新" aria-label="Permalink to &quot;文章更新&quot;">​</a></h2><ul><li>整合更新了一篇关于 terminal 的文章：<a href="https://github.com/Jsmond2016/blog/issues/19" target="_blank" rel="noreferrer">windows terminal 美化和配置教程</a> 配置好的目的主要也是为了学 vim，现在也买了<a href="https://juejin.cn/book/7051157342770954277" target="_blank" rel="noreferrer">掘金小册</a>在学习中</li></ul><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><blockquote><p>有感好文</p></blockquote><p><img src="'+i+'" alt=""></p><p><strong>TOP3</strong></p><ul><li><p><a href="https://github.com/lefex/FE" target="_blank" rel="noreferrer">前端你文章综合</a> 文章很多很全，详见里面的 readme</p></li><li><p><a href="https://juejin.cn/post/6994102811218673700" target="_blank" rel="noreferrer">Ts高手篇：22个示例深入讲解Ts最晦涩难懂的高级类型工具</a> 在封装请求库的时候用到很多泛型，感觉有些陌生，需要深入学习下；</p></li><li><p><a href="https://docker.easydoc.net/doc/81170005/cCewZWoN/lTKfePfP" target="_blank" rel="noreferrer">Docker 简介和安装</a> 知道 Docker 的原理后，对于操作，常用的就那些命令，抽个时间自己需要整理一份，同时配置一个自己的开发环境； <strong>有感好文</strong></p></li><li><p><a href="https://github.com/bytedance/debugtron" target="_blank" rel="noreferrer">electron 中 js 运行时错误如何捕获？</a></p></li><li><p><a href="https://juejin.cn/post/6844903926874013704" target="_blank" rel="noreferrer">nodejs 入门系列-redis</a></p></li><li><p><a href="https://juejin.cn/post/6844903926886580232" target="_blank" rel="noreferrer">nodejs 入门系列-数据库操作</a></p></li></ul><h2 id="项目-博客推荐" tabindex="-1">项目/博客推荐 <a class="header-anchor" href="#项目-博客推荐" aria-label="Permalink to &quot;项目/博客推荐&quot;">​</a></h2><blockquote><p>值得学习 作者/项目/工具等</p></blockquote><p><strong>博客</strong></p><ul><li><a href="https://www.cnblogs.com/strick/p/15855336.html" target="_blank" rel="noreferrer">连载-对求职面试者的一点小建议</a> 追了一阵子的作者的文章，对面试者的建议；</li><li><a href="https://www.cnblogs.com/strick/p/15604092.html" target="_blank" rel="noreferrer">Node.js躬行记（15）——活动规则引擎</a> 业务开发中，很多表单的校验规则都是写的 if...else，其实业务固定的情况下，主要的配置规则就那些，可以 写一个规则引擎，实现动态控制规则；</li><li><a href="https://www.cnblogs.com/strick/p/15104824.html" target="_blank" rel="noreferrer">Node.js躬行记（9）——微前端实践 </a></li><li><a href="https://juejin.cn/post/6999182700837863454" target="_blank" rel="noreferrer">前端从😳到🚪 gRPC 框架</a> 之前记录过，公司一个牛逼同事的文章，关于介绍 grpc 相关的知识；这个作者擅长 low-code 方面的内容，还专门出了<a href="https://www.lanqiao.cn/courses/2848" target="_blank" rel="noreferrer">课程</a></li></ul><p><strong>项目</strong></p><ul><li><a href="https://www.zhihu.com/question/453332049/answer/2257645010" target="_blank" rel="noreferrer">vue3 + ts + pina 搭建项目</a></li><li><a href="https://github.com/pwstrick/shin-server" target="_blank" rel="noreferrer">后端系统服务：一套完整的 Node.js 后端服务解决方案</a></li><li><a href="https://pdai.tech/" target="_blank" rel="noreferrer">Java 全栈知识体系</a> 里面一些语言无关的理论知识对于前端也有很大的帮助</li><li><a href="https://www.ladle.dev/docs/" target="_blank" rel="noreferrer">一个替换 storybook 的文档工具</a></li><li><a href="https://github.com/buuing/lucky-canvas" target="_blank" rel="noreferrer">抽奖相关的库</a></li><li><a href="https://github.com/hkc452/slamdunk-the-vue3" target="_blank" rel="noreferrer">vue3 源码全面解读</a></li></ul><h2 id="面经相关" tabindex="-1">面经相关 <a class="header-anchor" href="#面经相关" aria-label="Permalink to &quot;面经相关&quot;">​</a></h2><blockquote><p>八股文相关</p></blockquote><p><img src="'+n+'" alt=""></p><ul><li><a href="https://www.jianshu.com/p/144f603285dc" target="_blank" rel="noreferrer">vue 父子组件生命周期函数执行顺序</a> 总结来说，父亲前3个阶段，儿子4个阶段，父亲最后一个阶段；可以结合重绘回流和性能优化的角度去思考：vue 作者肯定不可能任何变化立刻让父组件改变，而是先汇总，然后统一挂载到父组件上，节省性能；避免多次重绘回流；</li><li><a href="https://segmentfault.com/a/1190000011968267" target="_blank" rel="noreferrer">nodejs 的 buffer 和 stream &amp; 管道</a> 对于前端而言，这块知识点可能比较薄弱；但是对于后端而言，buffer、stream 是基础，因此掌握 nodejs 的基础上，nodejs 需要深入学习；</li><li><a href="https://segmentfault.com/a/1190000011851623" target="_blank" rel="noreferrer">认识node核心模块--深入EventEmitter</a></li><li><a href="https://juejin.cn/user/2330620382159325/posts" target="_blank" rel="noreferrer">系列-vue/react 面试题系列</a></li><li><a href="https://github.com/pwstrick/daily" target="_blank" rel="noreferrer">面试题目大全</a></li></ul><h2 id="todos" tabindex="-1">TODOS <a class="header-anchor" href="#todos" aria-label="Permalink to &quot;TODOS&quot;">​</a></h2><blockquote><p>短期内要做的事情</p></blockquote><ul><li><p>数据库方面知识需要补强一下：</p><ul><li>mongodb；</li><li>mysql；</li><li>写个 express/koa + 数据库操作的例子 结合 docker 实战一下吧</li></ul></li><li><p>作为 工程技术人员，需要有自己的 工具箱：</p><ul><li>前端项目：后台 + h5</li><li>后端项目：server/redis/sql</li><li>期望效果：仅需 docker 配置一下即可运行测试</li></ul></li><li><p>puppeteer 海报截图：</p><ul><li><a href="https://www.cnblogs.com/ajanuw/p/10324269.htmlpuppeteer" target="_blank" rel="noreferrer">拦截页面请求</a></li><li><a href="https://segmentfault.com/a/1190000038719579" target="_blank" rel="noreferrer">用 Puppeteer + Nodejs 构建高效海报 &amp; 截图生成服务</a></li><li><a href="https://juejin.cn/post/6844903758351040520" target="_blank" rel="noreferrer">puppeteer截图</a></li></ul></li><li><p>vim 深入：<a href="https://zhuanlan.zhihu.com/p/430603620" target="_blank" rel="noreferrer">vscode + vim 全键盘操作高效搭配方案</a></p></li></ul>',29)]))}const k=r(s,[["render",p]]);export{b as __pageData,k as default};
