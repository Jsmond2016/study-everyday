import{_ as a,c as l,ag as i,o as r}from"./chunks/framework.BFjg9GqD.js";const s="/study-everyday/assets/file-upload.BbKrTRBr.png",t="/study-everyday/assets/weakmap.D2BebhE-.png",n="/study-everyday/assets/sums.RSs7PMQ8.png",m=JSON.parse('{"title":"1217 今日总结","description":"","frontmatter":{},"headers":[],"relativePath":"record-2021/12/1217.md","filePath":"record-2021/12/1217.md"}'),p={name:"record-2021/12/1217.md"};function o(h,e,c,d,k,u){return r(),l("div",null,e[0]||(e[0]=[i(`<h1 id="_1217-今日总结" tabindex="-1">1217 今日总结 <a class="header-anchor" href="#_1217-今日总结" aria-label="Permalink to &quot;1217 今日总结&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/OlympicCoast_ZH-CN0827844876_1920x1080.jpg" alt=""></p><h2 id="今日工作" tabindex="-1">今日工作 <a class="header-anchor" href="#今日工作" aria-label="Permalink to &quot;今日工作&quot;">​</a></h2><blockquote><p>问题，原因，解决方式，优化，巧妙实现，新知识</p></blockquote><p><strong>新知识</strong></p><p>张鑫旭博客阅读总结：</p><ul><li><a href="https://www.zhangxinxu.com/wordpress/2020/11/css-mix-blend-mode-filter-dark-theme/" target="_blank" rel="noreferrer">一行 css 代码实现暗黑模式</a></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">invert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hue-rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">turn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><a href="https://github.com/eligrey/FileSaver.js/" target="_blank" rel="noreferrer">web端 文件保存</a> 手动保存想要保存的文件</li><li><a href="https://www.zhangxinxu.com/wordpress/2021/08/file-system-access-api/" target="_blank" rel="noreferrer">不使用file类型input也能触发文件上传</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API" target="_blank" rel="noreferrer">File System Access API</a></li></ul><p><img src="`+s+'" alt=""></p><p>来源：<a href="https://www.zhangxinxu.com/wordpress/2015/11/html-input-type-file/" target="_blank" rel="noreferrer">HTML input type=file文件选择表单元素二三事</a></p><ul><li><a href="https://www.zhangxinxu.com/wordpress/2021/08/js-weakmap-es6/" target="_blank" rel="noreferrer"> JS WeakMap应该什么时候使用</a> 看看作者举例</li><li>如果是手动垃圾回收，这么做：一般的变量，我们用完后不需要了，设置成 null，可以理解为清楚了这个垃圾</li><li>但是，如果存在闭包，清除就麻烦一些，需要去一个个找；</li><li>为了避免手动自己一个个找未清除的无效变量，还不如交给系统自动垃圾回收；</li><li>这个时候，就可以使用 weakmap 了。因为其 key 是一个弱引用，一旦没有被引用后，就会自动垃圾回收了。</li><li>注意事项：使用 weakMap 的 key 是对象，且无法遍历，<strong>可以用来模拟 私有属性实现</strong></li></ul><p>使用场景：</p><p><img src="'+t+'" alt=""></p><p>摘录一句职业规划的启示：</p><p><img src="'+n+`" alt=""></p><ul><li><p><a href="https://www.zhangxinxu.com/wordpress/2021/07/html-rel-import-include/" target="_blank" rel="noreferrer">利用废弃的html rel import实现页面 include 功能</a></p></li><li><p><a href="https://www.zhangxinxu.com/wordpress/2021/07/js-proxy-reflect/" target="_blank" rel="noreferrer">对比 proxy 和 reflect 的区别， reflect 的优势</a></p><ul><li>能够知道赋值是否成功；</li><li>赋值失败不会报错不会阻止后续代码运行；</li><li>receiver-存在继承关系，receiver 表示调用主体</li></ul></li><li><p><a href="https://www.zhangxinxu.com/wordpress/2021/05/css-revert-display/" target="_blank" rel="noreferrer">使用CSS revert全局关键字还原display显示元素</a></p></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: none;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// display: block;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: revert; 可以考虑使用这个属性还原 display 的默认值</span></span></code></pre></div><hr><ul><li><a href="https://www.zhangxinxu.com/wordpress/2021/05/promise-all-race-any/" target="_blank" rel="noreferrer">Promise.all、race和any方法都是什么意思？</a></li></ul><p>使用场景：</p><ul><li>loading 效果</li><li>可取消的 promise</li><li>长时间请求执行的批处理</li></ul><p>拓展：<a href="https://gist.github.com/Mahdhir/1f6609ea75f45c07801168c18cdb3812/revisions" target="_blank" rel="noreferrer">细细研究一下 promise.cancel 取消请求的实现</a></p><ul><li><a href="https://www.zhangxinxu.com/wordpress/2021/01/js-keycode-deprecated/" target="_blank" rel="noreferrer">告别JS keyCode</a></li></ul><p>换成使用 event.code 和 event.key，区别：</p><ul><li>具体哪个物理键 event.code</li><li>输入的字符内容 event.key</li></ul><hr><ul><li><a href="https://www.zhangxinxu.com/wordpress/2020/12/dom-api-diff/" target="_blank" rel="noreferrer">几个常见功能重合DOM API的细节差异</a></li></ul><p>推荐使用 【包裹的属性】</p><ul><li>【innerText】 对比 textContent ：前者性能差，前者保留换行符，前者无法获取隐藏文字</li><li>【getAttribute 】对比 dataset对象：后者大小写敏感</li><li>【getElementById 】对比 querySelector： 后者容错性差，找不到会报错</li><li>【append】对比 appendChild 前者可以 append 多个元素，后者只能 append 一个；前者可以 append 字符串</li><li>【scrollIntoView】对比 scrollIntoViewIfNeeded 前者可以支持 smooth 平滑滚动；</li></ul><hr><ul><li><a href="https://www.zhangxinxu.com/wordpress/2020/12/js-intersectionobserver-nav/" target="_blank" rel="noreferrer">尝试使用JS IntersectionObserver让标题和导航联动</a></li></ul><p><strong>新知识</strong></p><ul><li>配置项目 eslint 配置：<a href="https://www.npmjs.com/package/@umijs/fabric" target="_blank" rel="noreferrer">https://www.npmjs.com/package/@umijs/fabric</a> 项目配置推荐</li></ul><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><blockquote><p>有感好文</p></blockquote><ul><li><a href="https://juejin.cn/post/6844903988945485837" target="_blank" rel="noreferrer">JavaScript 中的位运算和权限设计</a></li></ul><h2 id="项目-博客推荐" tabindex="-1">项目/博客推荐 <a class="header-anchor" href="#项目-博客推荐" aria-label="Permalink to &quot;项目/博客推荐&quot;">​</a></h2><blockquote><p>值得学习的项目/作者</p></blockquote><ul><li><a href="https://xy-ui.codelabo.cn/docs/#/README" target="_blank" rel="noreferrer">ui 组件库</a> 张鑫旭在博客提到的大佬</li></ul><h2 id="面经相关" tabindex="-1">面经相关 <a class="header-anchor" href="#面经相关" aria-label="Permalink to &quot;面经相关&quot;">​</a></h2><blockquote><p>八股文相关</p></blockquote><ul><li><a href="https://juejin.cn/post/7021712617274081287" target="_blank" rel="noreferrer">面试中必考的15个html知识点</a></li><li><a href="https://juejin.cn/post/7041016766968889358" target="_blank" rel="noreferrer">不平凡的2021，末流普本生秋招上岸大厂的历程</a></li></ul><h2 id="todos" tabindex="-1">TODOS <a class="header-anchor" href="#todos" aria-label="Permalink to &quot;TODOS&quot;">​</a></h2><blockquote><p>短期内要做的事情</p></blockquote><ul><li>可以列一个阅读计划，专门阅读 阮一峰，张鑫旭，或者一些其他优秀博客或者技术文档，每次阅读后写读后感</li><li>整理一下 意向登记图片查看器开发遇到的问题，顺便分析一下 AntD 的 Modal 实现</li></ul>`,46)]))}const f=a(p,[["render",o]]);export{m as __pageData,f as default};
