import{_ as a,c as i,o as s,a3 as e}from"./chunks/framework.B1tUqxYT.js";const b=JSON.parse('{"title":"算法题初中高级分类整理","description":"","frontmatter":{},"headers":[],"relativePath":"read-notes/leetcode-category.md","filePath":"read-notes/leetcode-category.md"}'),h={name:"read-notes/leetcode-category.md"},l=e(`<h1 id="算法题初中高级分类整理" tabindex="-1">算法题初中高级分类整理 <a class="header-anchor" href="#算法题初中高级分类整理" aria-label="Permalink to &quot;算法题初中高级分类整理&quot;">​</a></h1><blockquote><p>共计 141 道题</p></blockquote><ul><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-easy/" target="_blank" rel="noreferrer">初级算法</a></li><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-medium/" target="_blank" rel="noreferrer">中级算法</a></li><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-hard/" target="_blank" rel="noreferrer">高级算法</a></li><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions/" target="_blank" rel="noreferrer">未整理-算法面试题汇总</a></li><li><a href="https://github.com/Jsmond2016/Leetcode-retag" target="_blank" rel="noreferrer">Leetcode-retag</a> 重新分类 Leetcode 高频题 2021 版</li></ul><p>模板：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- 题目描述</span></span>
<span class="line"><span>- 解题方法</span></span>
<span class="line"><span>  - 思路</span></span>
<span class="line"><span>  - 注意要点</span></span>
<span class="line"><span>  - 代码</span></span>
<span class="line"><span>JavaScript 版本</span></span>
<span class="line"><span>Java 版本</span></span>
<span class="line"><span>Go 版本</span></span></code></pre></div><p>Plan：</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 完成上述 【初中高级和面试题】所有算法，并添加整理题解；</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 分类整理方法，每个专题添加 【出题方向】【题型总结】，可以参考 <a href="https://github.com/Jsmond2016/Leetcode-retag" target="_blank" rel="noreferrer">Leetcode-retag</a></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 参考 <a href="https://jsmond2016.github.io/leetcode/" target="_blank" rel="noreferrer">数据结构和算法学习</a> 的目标阶段逐步完成</li></ul><h2 id="数组和字符串" tabindex="-1">数组和字符串 <a class="header-anchor" href="#数组和字符串" aria-label="Permalink to &quot;数组和字符串&quot;">​</a></h2><p>初级：</p><h3 id="删除排序数组中的重复项" tabindex="-1">删除排序数组中的重复项 <a class="header-anchor" href="#删除排序数组中的重复项" aria-label="Permalink to &quot;删除排序数组中的重复项&quot;">​</a></h3><blockquote><p><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noreferrer">26. 删除有序数组中的重复项</a></p></blockquote><ul><li>题目描述</li><li>解题方法1 <ul><li>思路：利用双指针思想</li><li>注意要点</li></ul></li></ul><p>javascript 版本</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number[]}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeDuplicates</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nums</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> left </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> right </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; right </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n; right </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (nums[left] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums[right]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            nums[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">left] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums[right]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> left </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>java 版本</p><p>go 版本</p><ul><li>解题方法2 <ul><li>思路：利用哈希的唯一性</li><li>代码-js版本</li></ul></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeDuplicates</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nums</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hash </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hash.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nums[i])) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            hash.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nums[i], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            nums[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums[i]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="买卖股票的最佳时机-ii" tabindex="-1">买卖股票的最佳时机 II <a class="header-anchor" href="#买卖股票的最佳时机-ii" aria-label="Permalink to &quot;买卖股票的最佳时机 II&quot;">​</a></h3><ul><li>题目描述：</li><li>解题方法 <ul><li>思路</li><li>代码</li></ul></li></ul><p>JavaScript 版本</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number[]}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prices</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> maxProfit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">prices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prices.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ans </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (prices[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prices[i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ans </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prices[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prices[i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ans</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="旋转数组" tabindex="-1">旋转数组 <a class="header-anchor" href="#旋转数组" aria-label="Permalink to &quot;旋转数组&quot;">​</a></h3><h3 id="存在重复元素" tabindex="-1">存在重复元素 <a class="header-anchor" href="#存在重复元素" aria-label="Permalink to &quot;存在重复元素&quot;">​</a></h3><h3 id="只出现一次的数字" tabindex="-1">只出现一次的数字 <a class="header-anchor" href="#只出现一次的数字" aria-label="Permalink to &quot;只出现一次的数字&quot;">​</a></h3><h3 id="两个数组的交集-ii" tabindex="-1">两个数组的交集 II <a class="header-anchor" href="#两个数组的交集-ii" aria-label="Permalink to &quot;两个数组的交集 II&quot;">​</a></h3><h3 id="加一" tabindex="-1">加一 <a class="header-anchor" href="#加一" aria-label="Permalink to &quot;加一&quot;">​</a></h3><h3 id="移动零" tabindex="-1">移动零 <a class="header-anchor" href="#移动零" aria-label="Permalink to &quot;移动零&quot;">​</a></h3><h3 id="两数之和" tabindex="-1">两数之和 <a class="header-anchor" href="#两数之和" aria-label="Permalink to &quot;两数之和&quot;">​</a></h3><h3 id="有效的数独" tabindex="-1">有效的数独 <a class="header-anchor" href="#有效的数独" aria-label="Permalink to &quot;有效的数独&quot;">​</a></h3><h3 id="旋转图像" tabindex="-1">旋转图像 <a class="header-anchor" href="#旋转图像" aria-label="Permalink to &quot;旋转图像&quot;">​</a></h3><blockquote><p>字符串部分：</p></blockquote><h3 id="反转字符串" tabindex="-1">反转字符串 <a class="header-anchor" href="#反转字符串" aria-label="Permalink to &quot;反转字符串&quot;">​</a></h3><h3 id="整数反转" tabindex="-1">整数反转 <a class="header-anchor" href="#整数反转" aria-label="Permalink to &quot;整数反转&quot;">​</a></h3><h3 id="字符串中的第一个唯一字符" tabindex="-1">字符串中的第一个唯一字符 <a class="header-anchor" href="#字符串中的第一个唯一字符" aria-label="Permalink to &quot;字符串中的第一个唯一字符&quot;">​</a></h3><h3 id="有效的字母异位词" tabindex="-1">有效的字母异位词 <a class="header-anchor" href="#有效的字母异位词" aria-label="Permalink to &quot;有效的字母异位词&quot;">​</a></h3><h3 id="验证回文串" tabindex="-1">验证回文串 <a class="header-anchor" href="#验证回文串" aria-label="Permalink to &quot;验证回文串&quot;">​</a></h3><h3 id="字符串转换整数-atoi" tabindex="-1">字符串转换整数 (atoi) <a class="header-anchor" href="#字符串转换整数-atoi" aria-label="Permalink to &quot;字符串转换整数 (atoi)&quot;">​</a></h3><h3 id="实现-strstr" tabindex="-1">实现 strStr() <a class="header-anchor" href="#实现-strstr" aria-label="Permalink to &quot;实现 strStr()&quot;">​</a></h3><h3 id="外观数列" tabindex="-1">外观数列 <a class="header-anchor" href="#外观数列" aria-label="Permalink to &quot;外观数列&quot;">​</a></h3><h3 id="最长公共前缀" tabindex="-1">最长公共前缀 <a class="header-anchor" href="#最长公共前缀" aria-label="Permalink to &quot;最长公共前缀&quot;">​</a></h3><p>中级：</p><h3 id="三数之和" tabindex="-1">三数之和 <a class="header-anchor" href="#三数之和" aria-label="Permalink to &quot;三数之和&quot;">​</a></h3><h3 id="矩阵置零" tabindex="-1">矩阵置零 <a class="header-anchor" href="#矩阵置零" aria-label="Permalink to &quot;矩阵置零&quot;">​</a></h3><h3 id="字母异位词分组" tabindex="-1">字母异位词分组 <a class="header-anchor" href="#字母异位词分组" aria-label="Permalink to &quot;字母异位词分组&quot;">​</a></h3><h3 id="无重复字符的最长子串" tabindex="-1">无重复字符的最长子串 <a class="header-anchor" href="#无重复字符的最长子串" aria-label="Permalink to &quot;无重复字符的最长子串&quot;">​</a></h3><h3 id="最长回文子串" tabindex="-1">最长回文子串 <a class="header-anchor" href="#最长回文子串" aria-label="Permalink to &quot;最长回文子串&quot;">​</a></h3><h3 id="递增的三元子序列" tabindex="-1">递增的三元子序列 <a class="header-anchor" href="#递增的三元子序列" aria-label="Permalink to &quot;递增的三元子序列&quot;">​</a></h3><p>高级：</p><h3 id="除自身以外数组的乘积" tabindex="-1">除自身以外数组的乘积 <a class="header-anchor" href="#除自身以外数组的乘积" aria-label="Permalink to &quot;除自身以外数组的乘积&quot;">​</a></h3><h3 id="螺旋矩阵" tabindex="-1">螺旋矩阵 <a class="header-anchor" href="#螺旋矩阵" aria-label="Permalink to &quot;螺旋矩阵&quot;">​</a></h3><h3 id="四数相加-ii" tabindex="-1">四数相加 II <a class="header-anchor" href="#四数相加-ii" aria-label="Permalink to &quot;四数相加 II&quot;">​</a></h3><h3 id="盛最多水的容器" tabindex="-1">盛最多水的容器 <a class="header-anchor" href="#盛最多水的容器" aria-label="Permalink to &quot;盛最多水的容器&quot;">​</a></h3><h3 id="生命游戏" tabindex="-1">生命游戏 <a class="header-anchor" href="#生命游戏" aria-label="Permalink to &quot;生命游戏&quot;">​</a></h3><h3 id="缺失的第一个正数" tabindex="-1">缺失的第一个正数 <a class="header-anchor" href="#缺失的第一个正数" aria-label="Permalink to &quot;缺失的第一个正数&quot;">​</a></h3><h3 id="最长连续序列" tabindex="-1">最长连续序列 <a class="header-anchor" href="#最长连续序列" aria-label="Permalink to &quot;最长连续序列&quot;">​</a></h3><h3 id="寻找重复数" tabindex="-1">寻找重复数 <a class="header-anchor" href="#寻找重复数" aria-label="Permalink to &quot;寻找重复数&quot;">​</a></h3><h3 id="基本计算器-ii" tabindex="-1">基本计算器 II <a class="header-anchor" href="#基本计算器-ii" aria-label="Permalink to &quot;基本计算器 II&quot;">​</a></h3><h3 id="滑动窗口最大值" tabindex="-1">滑动窗口最大值 <a class="header-anchor" href="#滑动窗口最大值" aria-label="Permalink to &quot;滑动窗口最大值&quot;">​</a></h3><h3 id="最小覆盖子串" tabindex="-1">最小覆盖子串 <a class="header-anchor" href="#最小覆盖子串" aria-label="Permalink to &quot;最小覆盖子串&quot;">​</a></h3><h2 id="链表" tabindex="-1">链表 <a class="header-anchor" href="#链表" aria-label="Permalink to &quot;链表&quot;">​</a></h2><p>初级：</p><h3 id="删除链表中的节点" tabindex="-1">删除链表中的节点 <a class="header-anchor" href="#删除链表中的节点" aria-label="Permalink to &quot;删除链表中的节点&quot;">​</a></h3><h3 id="删除链表的倒数第n个节点" tabindex="-1">删除链表的倒数第N个节点 <a class="header-anchor" href="#删除链表的倒数第n个节点" aria-label="Permalink to &quot;删除链表的倒数第N个节点&quot;">​</a></h3><h3 id="反转链表" tabindex="-1">反转链表 <a class="header-anchor" href="#反转链表" aria-label="Permalink to &quot;反转链表&quot;">​</a></h3><h3 id="合并两个有序链表" tabindex="-1">合并两个有序链表 <a class="header-anchor" href="#合并两个有序链表" aria-label="Permalink to &quot;合并两个有序链表&quot;">​</a></h3><h3 id="回文链表" tabindex="-1">回文链表 <a class="header-anchor" href="#回文链表" aria-label="Permalink to &quot;回文链表&quot;">​</a></h3><h3 id="环形链表" tabindex="-1">环形链表 <a class="header-anchor" href="#环形链表" aria-label="Permalink to &quot;环形链表&quot;">​</a></h3><p>中级：</p><h3 id="两数相加" tabindex="-1">两数相加 <a class="header-anchor" href="#两数相加" aria-label="Permalink to &quot;两数相加&quot;">​</a></h3><h3 id="奇偶链表" tabindex="-1">奇偶链表 <a class="header-anchor" href="#奇偶链表" aria-label="Permalink to &quot;奇偶链表&quot;">​</a></h3><h3 id="相交链表" tabindex="-1">相交链表 <a class="header-anchor" href="#相交链表" aria-label="Permalink to &quot;相交链表&quot;">​</a></h3><p>高级：</p><h3 id="合并k个排序链表" tabindex="-1">合并K个排序链表 <a class="header-anchor" href="#合并k个排序链表" aria-label="Permalink to &quot;合并K个排序链表&quot;">​</a></h3><h3 id="排序链表" tabindex="-1">排序链表 <a class="header-anchor" href="#排序链表" aria-label="Permalink to &quot;排序链表&quot;">​</a></h3><h3 id="复制带随机指针的链表" tabindex="-1">复制带随机指针的链表 <a class="header-anchor" href="#复制带随机指针的链表" aria-label="Permalink to &quot;复制带随机指针的链表&quot;">​</a></h3><h2 id="树和图" tabindex="-1">树和图 <a class="header-anchor" href="#树和图" aria-label="Permalink to &quot;树和图&quot;">​</a></h2><p>初级：</p><h3 id="二叉树的最大深度" tabindex="-1">二叉树的最大深度 <a class="header-anchor" href="#二叉树的最大深度" aria-label="Permalink to &quot;二叉树的最大深度&quot;">​</a></h3><h3 id="验证二叉搜索树" tabindex="-1">验证二叉搜索树 <a class="header-anchor" href="#验证二叉搜索树" aria-label="Permalink to &quot;验证二叉搜索树&quot;">​</a></h3><h3 id="对称二叉树" tabindex="-1">对称二叉树 <a class="header-anchor" href="#对称二叉树" aria-label="Permalink to &quot;对称二叉树&quot;">​</a></h3><h3 id="二叉树的层序遍历" tabindex="-1">二叉树的层序遍历 <a class="header-anchor" href="#二叉树的层序遍历" aria-label="Permalink to &quot;二叉树的层序遍历&quot;">​</a></h3><h3 id="将有序数组转换为二叉搜索树" tabindex="-1">将有序数组转换为二叉搜索树 <a class="header-anchor" href="#将有序数组转换为二叉搜索树" aria-label="Permalink to &quot;将有序数组转换为二叉搜索树&quot;">​</a></h3><p>中级：</p><h3 id="二叉树的中序遍历" tabindex="-1">二叉树的中序遍历 <a class="header-anchor" href="#二叉树的中序遍历" aria-label="Permalink to &quot;二叉树的中序遍历&quot;">​</a></h3><h3 id="二叉树的锯齿形层次遍历" tabindex="-1">二叉树的锯齿形层次遍历 <a class="header-anchor" href="#二叉树的锯齿形层次遍历" aria-label="Permalink to &quot;二叉树的锯齿形层次遍历&quot;">​</a></h3><h3 id="从前序与中序遍历序列构造二叉树" tabindex="-1">从前序与中序遍历序列构造二叉树 <a class="header-anchor" href="#从前序与中序遍历序列构造二叉树" aria-label="Permalink to &quot;从前序与中序遍历序列构造二叉树&quot;">​</a></h3><h3 id="填充每个节点的下一个右侧节点指针" tabindex="-1">填充每个节点的下一个右侧节点指针 <a class="header-anchor" href="#填充每个节点的下一个右侧节点指针" aria-label="Permalink to &quot;填充每个节点的下一个右侧节点指针&quot;">​</a></h3><h3 id="二叉搜索树中第k小的元素" tabindex="-1">二叉搜索树中第K小的元素 <a class="header-anchor" href="#二叉搜索树中第k小的元素" aria-label="Permalink to &quot;二叉搜索树中第K小的元素&quot;">​</a></h3><h3 id="岛屿数量" tabindex="-1">岛屿数量 <a class="header-anchor" href="#岛屿数量" aria-label="Permalink to &quot;岛屿数量&quot;">​</a></h3><p>高级：</p><h3 id="单词接龙" tabindex="-1">单词接龙 <a class="header-anchor" href="#单词接龙" aria-label="Permalink to &quot;单词接龙&quot;">​</a></h3><h3 id="被围绕的区域" tabindex="-1">被围绕的区域 <a class="header-anchor" href="#被围绕的区域" aria-label="Permalink to &quot;被围绕的区域&quot;">​</a></h3><h3 id="二叉树的最近公共祖先" tabindex="-1">二叉树的最近公共祖先 <a class="header-anchor" href="#二叉树的最近公共祖先" aria-label="Permalink to &quot;二叉树的最近公共祖先&quot;">​</a></h3><h3 id="二叉树中的最大路径和" tabindex="-1">二叉树中的最大路径和 <a class="header-anchor" href="#二叉树中的最大路径和" aria-label="Permalink to &quot;二叉树中的最大路径和&quot;">​</a></h3><h3 id="朋友圈" tabindex="-1">朋友圈 <a class="header-anchor" href="#朋友圈" aria-label="Permalink to &quot;朋友圈&quot;">​</a></h3><h3 id="课程表" tabindex="-1">课程表 <a class="header-anchor" href="#课程表" aria-label="Permalink to &quot;课程表&quot;">​</a></h3><h3 id="课程表-ii" tabindex="-1">课程表 II <a class="header-anchor" href="#课程表-ii" aria-label="Permalink to &quot;课程表 II&quot;">​</a></h3><h3 id="矩阵中的最长递增路径" tabindex="-1">矩阵中的最长递增路径 <a class="header-anchor" href="#矩阵中的最长递增路径" aria-label="Permalink to &quot;矩阵中的最长递增路径&quot;">​</a></h3><h3 id="计算右侧小于当前元素的个数" tabindex="-1">计算右侧小于当前元素的个数 <a class="header-anchor" href="#计算右侧小于当前元素的个数" aria-label="Permalink to &quot;计算右侧小于当前元素的个数&quot;">​</a></h3><h2 id="回溯算法" tabindex="-1">回溯算法 <a class="header-anchor" href="#回溯算法" aria-label="Permalink to &quot;回溯算法&quot;">​</a></h2><p>中级：</p><h3 id="电话号码的字母组合" tabindex="-1">电话号码的字母组合 <a class="header-anchor" href="#电话号码的字母组合" aria-label="Permalink to &quot;电话号码的字母组合&quot;">​</a></h3><h3 id="括号生成" tabindex="-1">括号生成 <a class="header-anchor" href="#括号生成" aria-label="Permalink to &quot;括号生成&quot;">​</a></h3><h3 id="全排列" tabindex="-1">全排列 <a class="header-anchor" href="#全排列" aria-label="Permalink to &quot;全排列&quot;">​</a></h3><h3 id="子集" tabindex="-1">子集 <a class="header-anchor" href="#子集" aria-label="Permalink to &quot;子集&quot;">​</a></h3><h3 id="单词搜索" tabindex="-1">单词搜索 <a class="header-anchor" href="#单词搜索" aria-label="Permalink to &quot;单词搜索&quot;">​</a></h3><p>高级：</p><h3 id="分割回文串" tabindex="-1">分割回文串 <a class="header-anchor" href="#分割回文串" aria-label="Permalink to &quot;分割回文串&quot;">​</a></h3><h3 id="单词搜索-ii" tabindex="-1">单词搜索 II <a class="header-anchor" href="#单词搜索-ii" aria-label="Permalink to &quot;单词搜索 II&quot;">​</a></h3><h3 id="删除无效的括号" tabindex="-1">删除无效的括号 <a class="header-anchor" href="#删除无效的括号" aria-label="Permalink to &quot;删除无效的括号&quot;">​</a></h3><h3 id="通配符匹配" tabindex="-1">通配符匹配 <a class="header-anchor" href="#通配符匹配" aria-label="Permalink to &quot;通配符匹配&quot;">​</a></h3><h3 id="正则表达式匹配" tabindex="-1">正则表达式匹配 <a class="header-anchor" href="#正则表达式匹配" aria-label="Permalink to &quot;正则表达式匹配&quot;">​</a></h3><h2 id="排序和搜索" tabindex="-1">排序和搜索 <a class="header-anchor" href="#排序和搜索" aria-label="Permalink to &quot;排序和搜索&quot;">​</a></h2><h3 id="合并两个有序数组" tabindex="-1">合并两个有序数组 <a class="header-anchor" href="#合并两个有序数组" aria-label="Permalink to &quot;合并两个有序数组&quot;">​</a></h3><h3 id="第一个错误的版本" tabindex="-1">第一个错误的版本 <a class="header-anchor" href="#第一个错误的版本" aria-label="Permalink to &quot;第一个错误的版本&quot;">​</a></h3><p>中级：</p><h3 id="颜色分类" tabindex="-1">颜色分类 <a class="header-anchor" href="#颜色分类" aria-label="Permalink to &quot;颜色分类&quot;">​</a></h3><h3 id="前-k-个高频元素" tabindex="-1">前 K 个高频元素 <a class="header-anchor" href="#前-k-个高频元素" aria-label="Permalink to &quot;前 K 个高频元素&quot;">​</a></h3><h3 id="数组中的第k个最大元素" tabindex="-1">数组中的第K个最大元素 <a class="header-anchor" href="#数组中的第k个最大元素" aria-label="Permalink to &quot;数组中的第K个最大元素&quot;">​</a></h3><h3 id="寻找峰值" tabindex="-1">寻找峰值 <a class="header-anchor" href="#寻找峰值" aria-label="Permalink to &quot;寻找峰值&quot;">​</a></h3><h3 id="在排序数组中查找元素的第一个和最后一个位置" tabindex="-1">在排序数组中查找元素的第一个和最后一个位置 <a class="header-anchor" href="#在排序数组中查找元素的第一个和最后一个位置" aria-label="Permalink to &quot;在排序数组中查找元素的第一个和最后一个位置&quot;">​</a></h3><h3 id="合并区间" tabindex="-1">合并区间 <a class="header-anchor" href="#合并区间" aria-label="Permalink to &quot;合并区间&quot;">​</a></h3><h3 id="搜索旋转排序数组" tabindex="-1">搜索旋转排序数组 <a class="header-anchor" href="#搜索旋转排序数组" aria-label="Permalink to &quot;搜索旋转排序数组&quot;">​</a></h3><h3 id="搜索二维矩阵-ii" tabindex="-1">搜索二维矩阵 II <a class="header-anchor" href="#搜索二维矩阵-ii" aria-label="Permalink to &quot;搜索二维矩阵 II&quot;">​</a></h3><p>高级：</p><h3 id="摆动排序-ii" tabindex="-1">摆动排序 II <a class="header-anchor" href="#摆动排序-ii" aria-label="Permalink to &quot;摆动排序 II&quot;">​</a></h3><h3 id="有序矩阵中第k小的元素" tabindex="-1">有序矩阵中第K小的元素 <a class="header-anchor" href="#有序矩阵中第k小的元素" aria-label="Permalink to &quot;有序矩阵中第K小的元素&quot;">​</a></h3><h3 id="寻找两个正序数组的中位数" tabindex="-1">寻找两个正序数组的中位数 <a class="header-anchor" href="#寻找两个正序数组的中位数" aria-label="Permalink to &quot;寻找两个正序数组的中位数&quot;">​</a></h3><h2 id="动态规划" tabindex="-1">动态规划 <a class="header-anchor" href="#动态规划" aria-label="Permalink to &quot;动态规划&quot;">​</a></h2><h3 id="爬楼梯" tabindex="-1">爬楼梯 <a class="header-anchor" href="#爬楼梯" aria-label="Permalink to &quot;爬楼梯&quot;">​</a></h3><h3 id="买卖股票的最佳时机" tabindex="-1">买卖股票的最佳时机 <a class="header-anchor" href="#买卖股票的最佳时机" aria-label="Permalink to &quot;买卖股票的最佳时机&quot;">​</a></h3><h3 id="最大子序和" tabindex="-1">最大子序和 <a class="header-anchor" href="#最大子序和" aria-label="Permalink to &quot;最大子序和&quot;">​</a></h3><h3 id="打家劫舍" tabindex="-1">打家劫舍 <a class="header-anchor" href="#打家劫舍" aria-label="Permalink to &quot;打家劫舍&quot;">​</a></h3><p>中级：</p><h3 id="跳跃游戏" tabindex="-1">跳跃游戏 <a class="header-anchor" href="#跳跃游戏" aria-label="Permalink to &quot;跳跃游戏&quot;">​</a></h3><h3 id="不同路径" tabindex="-1">不同路径 <a class="header-anchor" href="#不同路径" aria-label="Permalink to &quot;不同路径&quot;">​</a></h3><h3 id="零钱兑换" tabindex="-1">零钱兑换 <a class="header-anchor" href="#零钱兑换" aria-label="Permalink to &quot;零钱兑换&quot;">​</a></h3><h3 id="最长上升子序列" tabindex="-1">最长上升子序列 <a class="header-anchor" href="#最长上升子序列" aria-label="Permalink to &quot;最长上升子序列&quot;">​</a></h3><p>高级：</p><h3 id="乘积最大子数组" tabindex="-1">乘积最大子数组 <a class="header-anchor" href="#乘积最大子数组" aria-label="Permalink to &quot;乘积最大子数组&quot;">​</a></h3><h3 id="最佳买卖股票时机含冷冻期" tabindex="-1">最佳买卖股票时机含冷冻期 <a class="header-anchor" href="#最佳买卖股票时机含冷冻期" aria-label="Permalink to &quot;最佳买卖股票时机含冷冻期&quot;">​</a></h3><h3 id="完全平方数" tabindex="-1">完全平方数 <a class="header-anchor" href="#完全平方数" aria-label="Permalink to &quot;完全平方数&quot;">​</a></h3><h3 id="单词拆分" tabindex="-1">单词拆分 <a class="header-anchor" href="#单词拆分" aria-label="Permalink to &quot;单词拆分&quot;">​</a></h3><h3 id="单词拆分-ii" tabindex="-1">单词拆分 II <a class="header-anchor" href="#单词拆分-ii" aria-label="Permalink to &quot;单词拆分 II&quot;">​</a></h3><h3 id="戳气球" tabindex="-1">戳气球 <a class="header-anchor" href="#戳气球" aria-label="Permalink to &quot;戳气球&quot;">​</a></h3><h2 id="设计问题" tabindex="-1">设计问题 <a class="header-anchor" href="#设计问题" aria-label="Permalink to &quot;设计问题&quot;">​</a></h2><h3 id="打乱数组" tabindex="-1">打乱数组 <a class="header-anchor" href="#打乱数组" aria-label="Permalink to &quot;打乱数组&quot;">​</a></h3><h3 id="最小栈" tabindex="-1">最小栈 <a class="header-anchor" href="#最小栈" aria-label="Permalink to &quot;最小栈&quot;">​</a></h3><p>中级：</p><h3 id="二叉树的序列化与反序列化" tabindex="-1">二叉树的序列化与反序列化 <a class="header-anchor" href="#二叉树的序列化与反序列化" aria-label="Permalink to &quot;二叉树的序列化与反序列化&quot;">​</a></h3><h3 id="常数时间插入、删除和获取随机元素" tabindex="-1">常数时间插入、删除和获取随机元素 <a class="header-anchor" href="#常数时间插入、删除和获取随机元素" aria-label="Permalink to &quot;常数时间插入、删除和获取随机元素&quot;">​</a></h3><p>高级：</p><h3 id="lru缓存机制" tabindex="-1">LRU缓存机制 <a class="header-anchor" href="#lru缓存机制" aria-label="Permalink to &quot;LRU缓存机制&quot;">​</a></h3><h3 id="实现-trie-前缀树" tabindex="-1">实现 Trie (前缀树) <a class="header-anchor" href="#实现-trie-前缀树" aria-label="Permalink to &quot;实现 Trie (前缀树)&quot;">​</a></h3><h3 id="扁平化嵌套列表迭代器" tabindex="-1">扁平化嵌套列表迭代器 <a class="header-anchor" href="#扁平化嵌套列表迭代器" aria-label="Permalink to &quot;扁平化嵌套列表迭代器&quot;">​</a></h3><h3 id="数据流的中位数" tabindex="-1">数据流的中位数 <a class="header-anchor" href="#数据流的中位数" aria-label="Permalink to &quot;数据流的中位数&quot;">​</a></h3><h2 id="数学" tabindex="-1">数学 <a class="header-anchor" href="#数学" aria-label="Permalink to &quot;数学&quot;">​</a></h2><h3 id="fizz-buzz" tabindex="-1">Fizz Buzz <a class="header-anchor" href="#fizz-buzz" aria-label="Permalink to &quot;Fizz Buzz&quot;">​</a></h3><h3 id="计数质数" tabindex="-1">计数质数 <a class="header-anchor" href="#计数质数" aria-label="Permalink to &quot;计数质数&quot;">​</a></h3><h3 id="_3的幂" tabindex="-1">3的幂 <a class="header-anchor" href="#_3的幂" aria-label="Permalink to &quot;3的幂&quot;">​</a></h3><h3 id="罗马数字转整数" tabindex="-1">罗马数字转整数 <a class="header-anchor" href="#罗马数字转整数" aria-label="Permalink to &quot;罗马数字转整数&quot;">​</a></h3><p>中级：</p><h3 id="快乐数" tabindex="-1">快乐数 <a class="header-anchor" href="#快乐数" aria-label="Permalink to &quot;快乐数&quot;">​</a></h3><h3 id="阶乘后的零" tabindex="-1">阶乘后的零 <a class="header-anchor" href="#阶乘后的零" aria-label="Permalink to &quot;阶乘后的零&quot;">​</a></h3><h3 id="excel表列序号" tabindex="-1">Excel表列序号 <a class="header-anchor" href="#excel表列序号" aria-label="Permalink to &quot;Excel表列序号&quot;">​</a></h3><h3 id="pow-x-n" tabindex="-1">Pow(x n) <a class="header-anchor" href="#pow-x-n" aria-label="Permalink to &quot;Pow(x n)&quot;">​</a></h3><h3 id="x-的平方根" tabindex="-1">x 的平方根 <a class="header-anchor" href="#x-的平方根" aria-label="Permalink to &quot;x 的平方根&quot;">​</a></h3><h3 id="两数相除" tabindex="-1">两数相除 <a class="header-anchor" href="#两数相除" aria-label="Permalink to &quot;两数相除&quot;">​</a></h3><h3 id="分数到小数" tabindex="-1">分数到小数 <a class="header-anchor" href="#分数到小数" aria-label="Permalink to &quot;分数到小数&quot;">​</a></h3><p>高级：</p><h3 id="最大数" tabindex="-1">最大数 <a class="header-anchor" href="#最大数" aria-label="Permalink to &quot;最大数&quot;">​</a></h3><h3 id="直线上最多的点数" tabindex="-1">直线上最多的点数 <a class="header-anchor" href="#直线上最多的点数" aria-label="Permalink to &quot;直线上最多的点数&quot;">​</a></h3><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="位1的个数" tabindex="-1">位1的个数 <a class="header-anchor" href="#位1的个数" aria-label="Permalink to &quot;位1的个数&quot;">​</a></h3><h3 id="汉明距离" tabindex="-1">汉明距离 <a class="header-anchor" href="#汉明距离" aria-label="Permalink to &quot;汉明距离&quot;">​</a></h3><h3 id="颠倒二进制位" tabindex="-1">颠倒二进制位 <a class="header-anchor" href="#颠倒二进制位" aria-label="Permalink to &quot;颠倒二进制位&quot;">​</a></h3><h3 id="杨辉三角" tabindex="-1">杨辉三角 <a class="header-anchor" href="#杨辉三角" aria-label="Permalink to &quot;杨辉三角&quot;">​</a></h3><h3 id="有效的括号" tabindex="-1">有效的括号 <a class="header-anchor" href="#有效的括号" aria-label="Permalink to &quot;有效的括号&quot;">​</a></h3><h3 id="缺失数字" tabindex="-1">缺失数字 <a class="header-anchor" href="#缺失数字" aria-label="Permalink to &quot;缺失数字&quot;">​</a></h3><p>中级：</p><h3 id="两整数之和" tabindex="-1">两整数之和 <a class="header-anchor" href="#两整数之和" aria-label="Permalink to &quot;两整数之和&quot;">​</a></h3><h3 id="逆波兰表达式求值" tabindex="-1">逆波兰表达式求值 <a class="header-anchor" href="#逆波兰表达式求值" aria-label="Permalink to &quot;逆波兰表达式求值&quot;">​</a></h3><h3 id="多数元素" tabindex="-1">多数元素 <a class="header-anchor" href="#多数元素" aria-label="Permalink to &quot;多数元素&quot;">​</a></h3><h3 id="任务调度器" tabindex="-1">任务调度器 <a class="header-anchor" href="#任务调度器" aria-label="Permalink to &quot;任务调度器&quot;">​</a></h3><p>高级：</p><h3 id="根据身高重建队列" tabindex="-1">根据身高重建队列 <a class="header-anchor" href="#根据身高重建队列" aria-label="Permalink to &quot;根据身高重建队列&quot;">​</a></h3><h3 id="接雨水" tabindex="-1">接雨水 <a class="header-anchor" href="#接雨水" aria-label="Permalink to &quot;接雨水&quot;">​</a></h3><h3 id="天际线问题" tabindex="-1">天际线问题 <a class="header-anchor" href="#天际线问题" aria-label="Permalink to &quot;天际线问题&quot;">​</a></h3><h3 id="柱状图中最大的矩形" tabindex="-1">柱状图中最大的矩形 <a class="header-anchor" href="#柱状图中最大的矩形" aria-label="Permalink to &quot;柱状图中最大的矩形&quot;">​</a></h3>`,190),t=[l];function n(r,o,d,k,p,c){return s(),i("div",null,t)}const q=a(h,[["render",n]]);export{b as __pageData,q as default};
