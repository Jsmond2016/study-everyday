import{_ as t,c as l,a2 as a,j as i,G as n,a as r,B as h,o as p}from"./chunks/framework.ek9jOonm.js";const o="/study-everyday/assets/moment-error-demo.tD_FMlMb.png",m=JSON.parse('{"title":"0904 今日总结","description":"","frontmatter":{},"headers":[],"relativePath":"record-2023/09/0904.md","filePath":"record-2023/09/0904.md"}'),k={name:"record-2023/09/0904.md"},d={href:"https://github.com/ant-design/ant-design/discussions/35437",target:"_blank",rel:"noreferrer"};function c(g,s,E,u,b,f){const e=h("DatePicker");return p(),l("div",null,[s[2]||(s[2]=a(`<h1 id="_0904-今日总结" tabindex="-1">0904 今日总结 <a class="header-anchor" href="#_0904-今日总结" aria-label="Permalink to &quot;0904 今日总结&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/BourgesMarsh_ZH-CN0505354655_1920x1080.jpg" alt=""></p><h2 id="今日工作" tabindex="-1">今日工作 <a class="header-anchor" href="#今日工作" aria-label="Permalink to &quot;今日工作&quot;">​</a></h2><blockquote><p>问题，原因，解决方式，优化，巧妙实现，新知识</p></blockquote><p>今天开了一天的会，接口评审，测试用例评审；</p><p>然而，下班的时候还是遇到 2 个小问题；</p><h3 id="问题1-css-样式-flex-1-剩余宽度被内容撑开问题" tabindex="-1">问题1 css 样式 <code>flex: 1</code> 剩余宽度被内容撑开问题 <a class="header-anchor" href="#问题1-css-样式-flex-1-剩余宽度被内容撑开问题" aria-label="Permalink to &quot;问题1 css 样式 \`flex: 1\` 剩余宽度被内容撑开问题&quot;">​</a></h3><p>大致如下的 HTML 结构：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aa flex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bb fixed-width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;固定宽度&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cc flex-1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    默认占据剩余宽度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dd very-long-width-child&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;内容很宽的子元素，占满剩余宽度后换行了&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>原本以为 <code>dd</code> 元素的宽度会默认占父级的 100%，即剩余宽度；实际上会换行到第二行，超出宽度部分它还会往外扩；</p><p>理论上是 弹性盒，总宽度应该占剩余宽度 100% 的；然而实际却不是；</p><p>解决办法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 方式1 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 方式2 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* overflow: hidden; */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>参考解决方案：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/130459378" target="_blank" rel="noreferrer">解决flex布局内容超出盒子宽度问题 - 知乎</a></li><li><a href="https://blog.csdn.net/ddyy2695734664/article/details/112761966" target="_blank" rel="noreferrer">flex布局设置flex=1的时候宽度被内部元素撑开的问题_大大大颖er的博客-CSDN博客</a></li><li><a href="https://blog.csdn.net/qq_36157085/article/details/116519413" target="_blank" rel="noreferrer">父元素设置flex：1；子元素内容过程导致被撑开_flex:1 撑开_MINO吖的博客-CSDN博客</a></li></ul><h3 id="问题2-immutable-包裹了-moment-日期后-丢失原型方法" tabindex="-1">问题2 Immutable 包裹了 moment 日期后，丢失原型方法； <a class="header-anchor" href="#问题2-immutable-包裹了-moment-日期后-丢失原型方法" aria-label="Permalink to &quot;问题2 Immutable 包裹了 moment 日期后，丢失原型方法；&quot;">​</a></h3><p><img src="`+o+'" alt=""></p><p>一个很简单的日期查询条件，形如上图；</p><p>因为这个筛选条件是暂存在 store 层，store 对数据做了 <code>Immutable</code> 处理，重新取到的值没有 <code>clone</code> 方法，导致页面报错；</p><p>下班前尚未找到解决方案，只是分析后发现极大概率是由于 <code>Immutable</code> 导致的；明天继续分析下是什么原因；</p><p>相关参考资料：</p>',21)),i("ul",null,[i("li",null,[i("a",d,[n(e),s[0]||(s[0]=r(" date.clone is not a function #35437"))])]),s[1]||(s[1]=i("li",null,[i("a",{href:"https://stackoverflow.com/questions/33638160/clone-is-not-a-function",target:"_blank",rel:"noreferrer"},".clone is not a function")],-1))]),s[3]||(s[3]=a('<h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><blockquote><p>有感好文</p></blockquote><p><strong>TOP3</strong></p><ul><li><a href="https://juejin.cn/post/7262615042189934653#comment" target="_blank" rel="noreferrer">两万字Web Workers终极指南🔥🔥🔥 - 掘金</a></li><li><a href="https://juejin.cn/post/7241813423460581435#heading-7" target="_blank" rel="noreferrer">⛳前端进阶：SEO 全方位解决方案 - 掘金</a></li><li><a href="https://juejin.cn/post/7264532077575716879#heading-2" target="_blank" rel="noreferrer">NestJS小技巧24-每个Nest.js开发人员都应该知道的10件事 - 掘金</a></li><li><a href="https://juejin.cn/post/7269668219488354361" target="_blank" rel="noreferrer">使用 Docker 实现前端应用的标准化构建、部署和运行 - 掘金</a></li></ul><p><strong>其他好文：</strong></p><p>周末给 《每日笔记》搭建了评论系统，使用了 <a href="https://github.com/gitalk/gitalk/issues?q=%E5%88%B7%E6%96%B0" target="_blank" rel="noreferrer">gitalk/gitalk</a> 这个工具，参考了一些 github action 的文档，终于搭建并测试完成；</p><p>其中，遇到一些问题：</p><ul><li>gitalk 的坑不少，常见的几个问题： <ul><li>请求路径 404；</li><li>重定向配置错误；</li><li>不同博客页面的评论重复；</li><li>不知道如何对评论初始化等等；</li></ul></li><li>github action 配置环境变量，主要是没有打开思路，可以使用命令在工作流中创建 <code>.env</code> 文件；</li></ul><p>相关资料：</p><ul><li><a href="https://juejin.cn/post/7059385316427169805" target="_blank" rel="noreferrer">使用 GitHub Actions 来构建你的应用程序吧～ - 掘金</a></li><li><a href="https://stackoverflow.com/questions/61117865/how-to-set-environment-variable-in-node-js-process-when-deploying-with-github-ac" target="_blank" rel="noreferrer">How to set environment variable in node.js process when deploying with github action</a></li></ul><h2 id="项目-博客推荐" tabindex="-1">项目/博客推荐 <a class="header-anchor" href="#项目-博客推荐" aria-label="Permalink to &quot;项目/博客推荐&quot;">​</a></h2><blockquote><p>值得学习 作者/项目/工具等</p></blockquote><p>图床工具：</p><p>写博客，经常会有配图，这个配图一般有几种使用方式，一种是 本地引用图片，一种是 使用图床，以下是几个社区比较推荐的图床；</p><ul><li><a href="https://zhuanlan.zhihu.com/p/353775844" target="_blank" rel="noreferrer">如何利用 Github 搭建自己的免费图床？ - 知乎</a></li><li><a href="https://picgo.github.io/PicGo-Doc/zh/guide/" target="_blank" rel="noreferrer">PicGo is Here | PicGo</a></li><li><a href="https://github.com/XPoet/picx" target="_blank" rel="noreferrer">XPoet/picx: 🏞️ PicX 是一款基于 GitHub API 开发的图床工具，提供图片上传托管、生成图片链接和常用图片工具箱服务。</a></li></ul>',15))])}const _=t(k,[["render",c]]);export{m as __pageData,_ as default};
