import{_ as n,c as s,o as a,b as l,d as t}from"./app.c216fdab.js";const e='{"title":"1027","description":"","frontmatter":{},"headers":[{"level":2,"title":"工作","slug":"工作"},{"level":2,"title":"反思","slug":"反思"}],"relativePath":"record/10/1027.md","lastUpdated":1635345554630}',o={},c=[l("h1",{id:"_1027",tabindex:"-1"},[t("1027 "),l("a",{class:"header-anchor",href:"#_1027","aria-hidden":"true"},"#")],-1),l("p",null,[l("img",{src:"/study-everyday/assets/1027.7f0c99ac.jpg",alt:""})],-1),l("h2",{id:"工作",tabindex:"-1"},[t("工作 "),l("a",{class:"header-anchor",href:"#工作","aria-hidden":"true"},"#")],-1),l("ul",null,[l("li",null,"html2pdf 问题：")],-1),l("p",null,"问题一：JSON 含有转义字符反序列化失败问题",-1),l("div",{class:"language-js"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},'// 方案一，让后端将序列化的数据替换掉下面的 "{{data}}"'),t("\n"),l("span",{class:"token keyword"},"const"),t(" dataSource "),l("span",{class:"token operator"},"="),t(),l("span",{class:"token string"},'"{{data}}"'),t("\n"),l("span",{class:"token comment"},"// 这里需要前端对数据进行反序列化"),t("\n"),l("span",{class:"token keyword"},"const"),t(" data "),l("span",{class:"token operator"},"="),t(),l("span",{class:"token constant"},"JSON"),l("span",{class:"token punctuation"},"."),l("span",{class:"token function"},"parse"),l("span",{class:"token punctuation"},"("),t("dataSource"),l("span",{class:"token punctuation"},")"),t("\n\n"),l("span",{class:"token comment"},'// 方案二 直接使用 dataSource，格式为 { "name": value }，这种既是 json 格式又是 对象格式，不需要反序列化'),t("\n"),l("span",{class:"token keyword"},"const"),t(" dataSource "),l("span",{class:"token operator"},"="),t(),l("span",{class:"token string"},'"{{data}}"'),t("\n")])])],-1),l("p",null,[t("方案一带来的问题：如果 数据中含有转义字符，例如："),l("code",null,"\\n, \\t, \\r"),t(" 等")],-1),l("div",{class:"language-js"},[l("pre",null,[l("code",null,[l("span",{class:"token constant"},"JSON"),l("span",{class:"token punctuation"},"."),l("span",{class:"token function"},"parse"),l("span",{class:"token punctuation"},"("),l("span",{class:"token punctuation"},"{"),l("span",{class:"token string"},'"name"'),l("span",{class:"token operator"},":"),l("span",{class:"token string"},'"hh\\n"'),l("span",{class:"token punctuation"},"}"),l("span",{class:"token punctuation"},")"),t("\n"),l("span",{class:"token constant"},"VM274"),l("span",{class:"token operator"},":"),l("span",{class:"token number"},"1"),t(" Uncaught SyntaxError"),l("span",{class:"token operator"},":"),t(" Unexpected token o "),l("span",{class:"token keyword"},"in"),t(),l("span",{class:"token constant"},"JSON"),t(" at position "),l("span",{class:"token number"},"1"),t("\n    at "),l("span",{class:"token constant"},"JSON"),l("span",{class:"token punctuation"},"."),l("span",{class:"token function"},"parse"),t(),l("span",{class:"token punctuation"},"("),l("span",{class:"token operator"},"<"),t("anonymous"),l("span",{class:"token operator"},">"),l("span",{class:"token punctuation"},")"),t("\n    at "),l("span",{class:"token operator"},"<"),t("anonymous"),l("span",{class:"token operator"},">"),l("span",{class:"token operator"},":"),l("span",{class:"token number"},"1"),l("span",{class:"token operator"},":"),l("span",{class:"token number"},"6"),t("\n")])])],-1),l("p",null,[t("解决方案就是，使用 "),l("code",null,"JSON.parse(val, replacer, fn)"),t(" 的第二个参数替换掉转义字符；")],-1),l("p",null,[t("随后发现 后端转成 json 的数据是 "),l("code",null,'{ "name": value }'),t(" 这就可以直接当做 对象使用，就不再需要使用 反序列化了")],-1),l("p",null,"问题描述二：pdf 模板打印空白问题",-1),l("p",null,"编写好 html 模板后，在本地 启动和使用 mock 数据测试没有问题，但是到了 html2pdf 服务中进行转换就整个页面白屏，猜测问题：",-1),l("ol",null,[l("li",null,"js 语法有问题，解析失败；"),l("li",null,"js 数据边界考虑错误，代码报错；"),l("li",null,"js 代码没执行；")],-1),l("p",null,"因为本地是 最新的 chrome 浏览器，语法什么的都是兼容的；本地测试是没有问题的；但是 服务器上打印服务的 浏览器环境就不是了；",-1),l("p",null,"查看了服务器上打印服务依赖的浏览器环境是 Electron 2.x 版本功能，看了下，是 18年左右的旧版本，当前的 Electron 版本已经是 15.x 了，差别还是很大的，最大的影响就是一些新特性语法不支持；",-1),l("p",null,"我的做法：",-1),l("ul",null,[l("li",null,"写段 js 插入 dom 操作验证 js 是可以执行的， success；"),l("li",null,"拿到导致 pdf 白屏的数据，本地 mock 测试，确定是否是边界问题，success；"),l("li",null,[t("最后，确定是语法兼容性问题了，我的做法： "),l("ul",null,[l("li",null,"使用 babel 在线将代码转换成 es5，结果 fail，这种做法也不方便后期维护代码；"),l("li",null,"因为 核心逻辑是依赖某一个 ts 文件的，因此 build 该 ts 文件，copy 其 build 完的 js 文件进行小部分修改， success；")])])],-1),l("p",null,"整整一天时间，因为不方便调试，所有时间都在改代码，上传服务器，测试环境验证....循环往复；",-1),l("p",null,"一直到晚上9 点左右，才走到最后一步，解决这个 pdf 打印空白问题；",-1),l("p",null,[t("正准备下班了，结果发现，公司公共组开发的"),l("strong",null,"水印"),t("功能有问题：pdf 的第二页没有水印；")],-1),l("p",null,"但是本地测试是好的呀，诶，头大.......明天再看吧~~~",-1),l("h2",{id:"反思",tabindex:"-1"},[t("反思 "),l("a",{class:"header-anchor",href:"#反思","aria-hidden":"true"},"#")],-1),l("p",null,[t("遇到问题了，才有成长和进步，老大最后解决问题了，看我的代码写的这么长，仔细梳理了一下，发现我的很多代码很多冗余的，以及"),l("strong",null,"业务和数据聚合耦合"),t("了，代码需要深度优化！！")],-1),l("p",null,"也确实，有问题有指导才能进步~~~",-1)];var p=n(o,[["render",function(n,l,t,e,o,p){return a(),s("div",null,c)}]]);export{e as __pageData,p as default};
