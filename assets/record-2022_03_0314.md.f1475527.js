import{_ as e,o as r,c as t,V as a}from"./chunks/framework.e0e258e1.js";const l="/study-everyday/assets/click-attack.b365948e.png",i="/study-everyday/assets/no-cache.0bdc0738.png",o="/study-everyday/assets/no-cache-2.f5af220c.png",n="/study-everyday/assets/raf.a4bd1ec3.png",k=JSON.parse('{"title":"0314 今日总结","description":"","frontmatter":{},"headers":[],"relativePath":"record-2022/03/0314.md","filePath":"record-2022/03/0314.md"}'),s={name:"record-2022/03/0314.md"},c=a('<h1 id="_0314-今日总结" tabindex="-1">0314 今日总结 <a class="header-anchor" href="#_0314-今日总结" aria-label="Permalink to &quot;0314 今日总结&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/LanyonQuoit_ZH-CN6278576563_1920x1080.jpg" alt=""></p><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><blockquote><p>有感好文</p></blockquote><p><strong>TOP3</strong></p><ul><li><a href="https://mp.weixin.qq.com/s/S9B8dnP-Lyhu9xRHOI_OEw" target="_blank" rel="noreferrer">10分钟教你手写8个常用的自定义hooks</a></li><li><a href="https://github.com/koala-coding/nest-blog" target="_blank" rel="noreferrer">考拉的 Nest 实战学习系列</a></li></ul><p><strong>专题：如何使用 Docker 搭建前端开发环境</strong></p><p>核心：</p><ul><li>利用 Dockerfile 配置开发环境 <ul><li>Nodejs、Golang、Yarn、Git、Nvm 开发等配置</li><li>配置 zsh、fzf、vim 等工具</li><li>代码永久保存方式</li><li>windows、Linux、Mac 系统自由切换</li></ul></li><li>使用 vs code 中的 dev container 功能</li><li>利用 wsl2 高阶功能</li></ul><p>相关文章：</p><ul><li><a href="https://www.cnblogs.com/stulzq/p/13926936.html" target="_blank" rel="noreferrer">wsl1 升级 wsl 2</a></li><li><a href="https://blog.csdn.net/weixin_54433389/article/details/120728509" target="_blank" rel="noreferrer">oh-my-docker</a></li><li><a href="https://github/FrankFang/oh-my-docker" target="_blank" rel="noreferrer">FrankFang/oh-my-docker</a></li><li><a href="https://yomxxx.github.io/2020/11/20/20201120-docker-web/" target="_blank" rel="noreferrer">从0到1搭建舒适的docker前端开发环境</a></li><li><a href="https://juejin.cn/post/6932808129189150734" target="_blank" rel="noreferrer">利用docker搭建前端开发环境</a></li><li><a href="https://juejin.cn/post/7017129520649994253" target="_blank" rel="noreferrer">如何用 docker 打造前端开发环境</a></li><li><a href="https://www.cnblogs.com/wangmeijian/p/14279781.html" target="_blank" rel="noreferrer">docker搭建前端环境</a></li></ul><h2 id="面经相关" tabindex="-1">面经相关 <a class="header-anchor" href="#面经相关" aria-label="Permalink to &quot;面经相关&quot;">​</a></h2><blockquote><p>八股文相关</p></blockquote><p><strong>service worker</strong></p><ul><li><a href="https://mp.weixin.qq.com/s/3Ep5pJULvP7WHJvVJNDV-g" target="_blank" rel="noreferrer">网易云课堂 Service Worker 运用与实践</a> 整理面试相关的内容，看到这个，复习深入下</li><li><a href="https://www.lmcc.top/articles/73.html" target="_blank" rel="noreferrer">一文搞懂前端service-worker 技术</a></li></ul><p><strong>前端安全</strong></p><ul><li>xss</li><li>csrf</li><li>click-attack</li></ul><p>相关文章：</p><ul><li><a href="https://www.cnblogs.com/itsuibi/p/10752868.html" target="_blank" rel="noreferrer">xsrf 和 xss 攻击分别是什么？</a></li><li><a href="https://zhuanlan.zhihu.com/p/101300360" target="_blank" rel="noreferrer">xss 是什么，如何攻击、如何防御</a></li><li><a href="https://tech.meituan.com/2018/09/27/fe-security.html" target="_blank" rel="noreferrer">前端安全系列（一）：如何防止XSS攻击？</a></li><li><a href="https://tech.meituan.com/2018/10/11/fe-security-csrf.html" target="_blank" rel="noreferrer">前端安全系列（二）：如何防止CSRF攻击？</a></li><li><a href="https://sking7.github.io/articles/430468050.html" target="_blank" rel="noreferrer">防御XSS的七条原则 | Web应用安全实验室</a></li></ul><p><img src="'+l+'" alt=""></p><ul><li><a href="https://zh.javascript.info/clickjacking" target="_blank" rel="noreferrer">点击劫持攻击</a></li></ul><p><strong>HTTP网络相关</strong></p><p><img src="'+i+'" alt=""><img src="'+o+'" alt=""></p><ul><li><a href="https://blog.csdn.net/mymilkbottles/article/details/69060193" target="_blank" rel="noreferrer">no-store, no-cache 区别</a></li><li><a href="https://www.jianshu.com/p/261b9dbb0720" target="_blank" rel="noreferrer">no-cache 和 no-store 的区别</a></li><li>推荐阅读 <a href="https://zhuanlan.zhihu.com/p/55623075" target="_blank" rel="noreferrer">图解Http缓存控制之max-age=0、no-cache、no-store区别</a> 饥人谷若愚老师的文章写得很清晰</li></ul><p><strong>RequestAnimationFrame / cancelAnimationFrame</strong></p><p><img src="'+n+'" alt=""></p><p>常用的实现动画的方式：</p><ul><li>css 方式：transform, transition, animation；优缺点是 流畅度好，但是不能所有属性参与到动画中；</li><li>js 方式: setTimeout, setInterval；可控和自定义灵活，缺点是定时器时间设的越短掉帧时间越严重，而且性能牺牲很严重。</li><li>RAF 方式：RAF 会把每一帧中的所有 DOM 操作集中起来，在一次重绘或回流中完成，并且这个重绘或回流的时间间隔紧紧跟随浏览器的刷新率，比如浏览器刷新帧数60帧就是每秒60帧(1000/60 ms)，高刷的90帧就是每秒90帧(1000/90 ms)。</li></ul><p>相关资料：</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame" target="_blank" rel="noreferrer">什么是 requestAnimationFrame ，使用场景？</a></li><li><a href="https://juejin.cn/post/6844903600557129736" target="_blank" rel="noreferrer">requestAnimationFrame理解与实践</a></li><li>推荐阅读：<a href="https://www.modb.pro/db/230648" target="_blank" rel="noreferrer">requestAnimationFrame浅评及场景应用分析</a>，文中的 <a href="https://jsbin.com/lugulucoca/2/edit?html,js,output" target="_blank" rel="noreferrer">例子</a></li><li>推荐阅读：<a href="https://github.com/iotale/garden/issues/11" target="_blank" rel="noreferrer">requestAnimationFrame 必知必会</a></li></ul><p><strong>WebRTC</strong></p><ul><li><a href="https://github.com/shushushv/webrtc-p2p" target="_blank" rel="noreferrer">50行代码完成视频通话 (WebRTC + WebSocket)</a></li></ul><h2 id="todos" tabindex="-1">TODOS <a class="header-anchor" href="#todos" aria-label="Permalink to &quot;TODOS&quot;">​</a></h2><blockquote><p>短期内要做的事情</p></blockquote><ul><li><a href="https://www.bilibili.com/video/BV1YU4y1g745?p=2" target="_blank" rel="noreferrer">webpack5 最新教程</a></li></ul>',35),h=[c];function p(u,m,f,g,b,_){return r(),t("div",null,h)}const w=e(s,[["render",p]]);export{k as __pageData,w as default};
