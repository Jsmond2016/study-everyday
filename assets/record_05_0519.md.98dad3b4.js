import{_ as e,c as r,o as l,a}from"./app.da6e63e0.js";const i='{"title":"0519","description":"","frontmatter":{},"headers":[{"level":2,"title":"工作","slug":"工作"},{"level":2,"title":"学习","slug":"学习"},{"level":2,"title":"反思","slug":"反思"},{"level":2,"title":"明日计划","slug":"明日计划"}],"relativePath":"record/05/0519.md","lastUpdated":1636127286902}',t={},n=[a('<h1 id="_0519" tabindex="-1">0519 <a class="header-anchor" href="#_0519" aria-hidden="true">#</a></h1><h2 id="工作" tabindex="-1">工作 <a class="header-anchor" href="#工作" aria-hidden="true">#</a></h2><ul><li>后台开发：联调和改bug 阶段。</li><li>感受： <ul><li>集成环境是可以用，总体联调感觉还是很棒的。前后端联调在群里新建一个 excel 文档记录问题，什么问题，描述，发现人，解决状态。这样效率很高开发体验也很棒。</li></ul></li></ul><h2 id="学习" tabindex="-1">学习 <a class="header-anchor" href="#学习" aria-hidden="true">#</a></h2><ul><li><p>今天干了啥：</p><ul><li><a href="http://interview.poetries.top/docs/base.html" target="_blank" rel="noopener noreferrer">前端进阶博客</a> 推荐优秀博客</li><li>同事推荐了个好的博客网站，里面很多面试题，但是查看全部需要关注公众号。不过网站有 bug，通过改 css 样式可以破解。</li><li>顺便，我就写了个简单的爬虫，把所有的内容爬下来，然后转换成 markdown 格式，俨然就是一本【面试大全】呀，为女朋友后面面试复习提供好的学习资料。</li><li>代码学习地址：<a href="https://github.com/Jsmond2016/craw" target="_blank" rel="noopener noreferrer">github/craw</a></li></ul></li><li><p>自己写的爬虫总结：</p><ul><li>使用技术：<code>rquest + cheerio + html-to-md</code> 实现将页面数据拉下来，同时将我们需要的内容转换成 markdown 文档，此时使用 <code>Typora</code> 导出为 PDF 即可拥有左侧导航栏进行阅读。</li><li>项目配置：<code>nodemon</code> 配置下开发。</li></ul></li><li><p>好文阅读：</p><ul><li><a href="https://juejin.cn/post/6963476650356916254" target="_blank" rel="noopener noreferrer">canvas 实现泡泡龙</a> 近期遇到比较多 canvas 的需求，这方面也看看</li><li><a href="https://juejin.cn/post/6958998979023470628#comment" target="_blank" rel="noopener noreferrer">canvas 实现烟花效果</a> 实现烟花的效果。</li><li><a href="https://blog.csdn.net/weixin_45969777/article/details/106158057" target="_blank" rel="noopener noreferrer">Nodejs的学习Ⅲ（cheerio、Puppeteer、网络协议、简单服务器搭建）</a> 使用到了无头浏览器 puppeteer</li><li><a href="https://www.cnblogs.com/xiaxuexiaoab/p/7297509.html" target="_blank" rel="noopener noreferrer">nodejs爬虫笔记(五)---利用nightmare模拟点击下一页</a></li><li><a href="https://www.cnblogs.com/xiaxuexiaoab/p/7124956.html" target="_blank" rel="noopener noreferrer">nodejs爬虫笔记(一)---request与cheerio等模块的应用</a></li><li><a href="https://www.cnblogs.com/mybilibili/p/10577403.html" target="_blank" rel="noopener noreferrer">用node写个爬虫</a></li></ul></li></ul><p><strong>小结</strong>：</p><p>关于爬虫，主要有这几种需求：</p><ul><li>静态页面爬虫：最简单也最常见的页面，就是简单的静态页面即可获取我们要的数据。此方式只需要简单的 <code>request + cheerio</code> 即可实现我们的需求</li><li>动态页面爬虫：需要模拟用户点击才能看到的数据，例如弹框内的列表数据，此时，需要模拟浏览器操作，使用 <code>puppeteer</code> 结合</li></ul><h2 id="反思" tabindex="-1">反思 <a class="header-anchor" href="#反思" aria-hidden="true">#</a></h2><ul><li>做的不好的</li><li>做的好的</li></ul><h2 id="明日计划" tabindex="-1">明日计划 <a class="header-anchor" href="#明日计划" aria-hidden="true">#</a></h2>',11)];var o=e(t,[["render",function(e,a,i,t,o,h){return l(),r("div",null,n)}]]);export{i as __pageData,o as default};
