import{_ as i,c as a,ag as n,o as t}from"./chunks/framework.BFjg9GqD.js";const c=JSON.parse('{"title":"0928 本周总结","description":"","frontmatter":{},"headers":[],"relativePath":"record-2021/09/0928-week-summary.md","filePath":"record-2021/09/0928-week-summary.md"}'),l={name:"record-2021/09/0928-week-summary.md"};function e(h,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_0928-本周总结" tabindex="-1">0928 本周总结 <a class="header-anchor" href="#_0928-本周总结" aria-label="Permalink to &quot;0928 本周总结&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/DorsetPinnacles_ZH-CN2764578102_1920x1080.jpg" alt=""></p><h2 id="问题盘点" tabindex="-1">问题盘点 <a class="header-anchor" href="#问题盘点" aria-label="Permalink to &quot;问题盘点&quot;">​</a></h2><ul><li><code>textarea</code> 右下角的伸缩如何禁用：</li></ul><p>使用样式 <code>resize: none;</code> 样式即可</p><ul><li><a href="https://www.cnblogs.com/flyingeagle/articles/7658786.html" target="_blank" rel="noreferrer">DTO 和 entity 的区别</a></li><li><a href="https://github.com/ctimmerm/axios-mock-adapter" target="_blank" rel="noreferrer">axios-mock-adapter</a> 看到项目中用了这个库做单元测试，使用非常简单方便。</li><li>yarn 更新依赖</li></ul><p>方式1：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm-check-updates</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ncu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看版本变更</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ncu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 更新</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装新的依赖，更新</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn.lock</span></span></code></pre></div><p>方式2：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行命令后，需要手动选择升级的依赖包，按空格键选择，a 键切换所有，i 键反选选择</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade-interactive</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --latest</span></span></code></pre></div><ul><li>string to dom VS dom to string: 字符串和 dom 转换操作</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 字符串转 DOM</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resStr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;div class=&#39;a-b&#39;&gt;&lt;span class=&#39;title&#39;&gt;\${标题}&lt;/span&gt;&lt;/div&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DOMParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resDom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseFromString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text/html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 操作和改变 resDom</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(resDom).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // dom 操作，替换值等</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// DOM 转 字符串</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> templateStr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resDom.documentElement.outHTML</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 后续其他操作...</span></span></code></pre></div><h2 id="任务总结" tabindex="-1">任务总结 <a class="header-anchor" href="#任务总结" aria-label="Permalink to &quot;任务总结&quot;">​</a></h2><blockquote><p>本周任务完成度，完成感受/未完成理由</p></blockquote><h2 id="笔记输出" tabindex="-1">笔记输出 <a class="header-anchor" href="#笔记输出" aria-label="Permalink to &quot;笔记输出&quot;">​</a></h2><h2 id="周末学习" tabindex="-1">周末学习 <a class="header-anchor" href="#周末学习" aria-label="Permalink to &quot;周末学习&quot;">​</a></h2><h2 id="下周任务" tabindex="-1">下周任务 <a class="header-anchor" href="#下周任务" aria-label="Permalink to &quot;下周任务&quot;">​</a></h2>`,17)]))}const g=i(l,[["render",e]]);export{c as __pageData,g as default};
