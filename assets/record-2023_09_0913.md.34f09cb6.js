import{_ as s,o as a,c as l,V as e}from"./chunks/framework.e0e258e1.js";const n="/study-everyday/assets/4b36bba1d27d27186166712bf7789a52_.e6a99bfb.png",o="/study-everyday/assets/stackoverflow-git-merge.6b614833.png",t="/study-everyday/assets/time-manage-sys.623138cd.png",p="/study-everyday/assets/scan-to-login.9003e8a3.png",d=JSON.parse('{"title":"0913 今日总结","description":"","frontmatter":{},"headers":[],"relativePath":"record-2023/09/0913.md","filePath":"record-2023/09/0913.md"}'),r={name:"record-2023/09/0913.md"},i=e(`<h1 id="_0913-今日总结" tabindex="-1">0913 今日总结 <a class="header-anchor" href="#_0913-今日总结" aria-label="Permalink to &quot;0913 今日总结&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/HemakutaHill_ZH-CN7438439036_1920x1080.jpg" alt=""></p><h2 id="今日工作" tabindex="-1">今日工作 <a class="header-anchor" href="#今日工作" aria-label="Permalink to &quot;今日工作&quot;">​</a></h2><blockquote><p>问题，原因，解决方式，优化，巧妙实现，新知识</p></blockquote><h3 id="问题1-ts-类型匹配问题" tabindex="-1">问题1: ts 类型匹配问题 <a class="header-anchor" href="#问题1-ts-类型匹配问题" aria-label="Permalink to &quot;问题1: ts 类型匹配问题&quot;">​</a></h3><p>前两天做 ts 类型优化，遇到个类型不匹配问题，参考在线链接：<a href="https://www.typescriptlang.org/play?#code/FAFwngDgpgBA0lMBnGBeGByAhhmAfTAIw2FElgEEAFAJwHsIV0BvYGdmLLALhiRBoBLAHYBzANzAAvmWgwAQrQZMYrDjEKFe-IWMkzZsBMgCyWCGlVsOPGNXqNJ6rQqWPppcHIBigqABsAE0s1DgBrRF5jJCcOCAckKMQkMwgAbWiAXQ9gAGM6YX4YADM-IN5fAOCWa3YIsF5sDAAaWph45V5mKRgAel6YAHcsYRAYEWKoGjs3JGkgA" target="_blank" rel="noreferrer">typescript-playground</a></p><p>代码很简单，目的就是为了让 <code>type</code> 和 <code>props</code> 绑定；不能使用泛型；</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Keys</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AProps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">aa</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BProps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">bb</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">KeysMap</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AProps</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BProps</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Field</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Keys</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">KeysMap</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">Keys</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> field</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Field</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// want infer AProps</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Error: Type &#39;{}&#39; is not assignable to type &#39;AProps | BProps&#39;.</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>我把这个问题抛在了群里，有大佬给出了答案，如下：</p><p><img src="`+n+'" alt="ts"></p><p>针对我需要的使用方式，我优化了下，如下：<a href="https://www.typescriptlang.org/play?#code/FAFwngDgpgBA0lMBnGBeGByAhhmAfTAIw2FElgEEAFAJwHsIV0BvYGdmLLALhiRBoBLAHYBzANzAAvmWgwAQrQZMYrDjEKFe-IWMkzZlAGKCoAGwAmaVWw4BrRL2wYANLfYR6jXtS9JppOBy8ibmVizuMA5gTsRu6p7KvIp+AYYwoZbWFJlWBCGmloHkGYUWAOqCIAAWAPI1UDQquTAAZDbqDCCCdMJIvABKUADGdDQWADw6IqIunMJgAHyS6t0gZlDaAjMrHBZYIFgAksIWUAAeW7oSacCjfSAwAGZl-aVhlTX11Y1IANoAXWsf0ianU9kcmBw8XBHj8vDBsPUXCcJCRMCkMNhaw2qKx4P2hxOZ0umFckU6EG6vTezB4MAAjBj3JiYO5EeDorFyejEt4OuiOJpURSOJjRewcZsyfj1ITjqcLniJTAuj0+gj6UyZGK3ACgA" target="_blank" rel="noreferrer">优化后大概使用方式</a></p><div class="tip custom-block"><p class="custom-block-title">感想</p><p>真正做组件开发和优化的时候，才知道自己的 ts 能力有多薄弱，还得多练练 <a href="https://github.com/type-challenges/type-challenges" target="_blank" rel="noreferrer">类型体操</a> 啊</p></div><h3 id="问题2-git-不切换分支合并代码" tabindex="-1">问题2 git 不切换分支合并代码 <a class="header-anchor" href="#问题2-git-不切换分支合并代码" aria-label="Permalink to &quot;问题2 git 不切换分支合并代码&quot;">​</a></h3><p>我们知道，git 操作中，如果要合并当前分支到目标分支，需要先切换分支到目标分支，再把当前分支合并进去；</p><p>同时昨天问我：有没有什么命令或者方式，不需要切换分支，就能合并到目标分支？</p><p>我搜了下 Stack Overflow，发现有类似答案；同事实践后可行</p><p>参考 <a href="https://stackoverflow.com/questions/1402993/git-checkout-and-merge-without-touching-working-tree" target="_blank" rel="noreferrer">Git checkout and merge without touching working tree</a></p><p>代码：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">feature1:master</span></span></code></pre></div><p>答案有解释：</p><p><img src="'+o+'" alt=""></p><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><blockquote><p>有感好文，专题好文</p></blockquote><h3 id="top3" tabindex="-1">TOP3 <a class="header-anchor" href="#top3" aria-label="Permalink to &quot;TOP3&quot;">​</a></h3><p><img src="'+t+'" alt=""></p><ul><li><a href="https://juejin.cn/post/7276675247597305867" target="_blank" rel="noreferrer">优秀的时间管理和人生管理系统 | 如何过完有效率的一周</a></li></ul><div class="tip custom-block"><p class="custom-block-title">❤️ 感受</p><ul><li>很优秀的时间管理和人生管理系统，确实是，要让一件事情有意义，需要记录下来；</li><li>确定目标，持续输出，持之以恒；类似一个每日反思整理，不断提升自己；</li></ul></div><div class="danger custom-block"><p class="custom-block-title">🤲 如何做到和作者一样优秀呢？</p><ul><li>规划自己的人生系统（目标）：读书、整理、兴趣、工作、英语、反思等； <ul><li>确定目标的标准：如 读完一本书，学会一项技能，输出几篇文章等；</li><li>类似于目标管理，需要对上述目标做拆解；类似 <a href="https://baike.baidu.com/item/SMART%E5%8E%9F%E5%88%99/8575850" target="_blank" rel="noreferrer">smart 原则</a></li><li>确定好任务的状态：任务详情、状态（待规划、进行中、已完成等）、执行时间和周期、关联目标等；</li></ul></li><li>强制规划自己的时间 <ul><li>有了目标和拆解任务，接下来就是合理安排时间去执行；</li><li>通常的时间选择：早晨、上下午、周末等；一般是自己效率最高，时间率用率最佳的时间段；</li><li>填写自己的日程表；</li></ul></li><li>记录：对于自己的任务执行细节打卡记录；留下时间的痕迹； <ul><li>每日记录：可以使用模板，快速记录；</li><li>周、月记录：</li></ul></li><li>其他：合理利用工具，如 app，飞书文档，语雀文档等 方便管理和记录；</li></ul></div><ul><li><a href="https://juejin.cn/post/7277387014046335010" target="_blank" rel="noreferrer">Bun 1.0 正式发布，爆火的前端运行时，速度遥遥领先！ - 掘金</a> 通篇读下来，如果 Bun.js 没有什么缺点，那么确实很强！</li><li><a href="https://juejin.cn/post/7221073443935649853" target="_blank" rel="noreferrer">Monorepo从构建到自动化发布 - 掘金</a> 关于 Monrepo 介绍的比较细致</li></ul><h3 id="扫码登录方案" tabindex="-1">扫码登录方案 <a class="header-anchor" href="#扫码登录方案" aria-label="Permalink to &quot;扫码登录方案&quot;">​</a></h3><p><img src="'+p+'" alt=""></p><ul><li><a href="https://juejin.cn/post/7276808079142961189" target="_blank" rel="noreferrer">业务: 前后端实现二维码扫码登录-深度剖析</a></li><li><a href="https://juejin.cn/post/7276266802824511540" target="_blank" rel="noreferrer">Nest 实现扫码登录</a></li></ul><div class="tip custom-block"><p class="custom-block-title">总结几个技术要点：</p><ul><li>二维码 <ul><li>需要临时生成，具备有效期，一般时间比较短；</li><li>会有几个状态：已扫描，已确认，已取消；</li><li>轮训状态：可以使用轮训方案，websocket 方案，还有 sse 方案；关于 sse 可以参考 <a href="https://zhuanlan.zhihu.com/p/515921898" target="_blank" rel="noreferrer">详解 Server Sent Event(SSE)</a></li><li>二维码轮训状态已确认后，拿到 token 给到页面刷新页面；</li></ul></li><li>后端：生成二维码，设置有效期，设置 有效 token；</li></ul></div><h3 id="如何封装-axios" tabindex="-1">如何封装 axios <a class="header-anchor" href="#如何封装-axios" aria-label="Permalink to &quot;如何封装 axios&quot;">​</a></h3><ul><li><a href="https://juejin.cn/post/6844903652881072141" target="_blank" rel="noreferrer">vue中Axios的封装和API接口的管理 - 掘金</a></li><li><a href="https://juejin.cn/post/7277029942298329125" target="_blank" rel="noreferrer">改变axios的用法后，我的工作效率提升了3倍 - 掘金</a></li><li><a href="https://juejin.cn/post/7071518211392405541#heading-12" target="_blank" rel="noreferrer">在项目中用ts封装axios，一次封装整个团队受益😁 - 掘金</a></li><li><a href="https://juejin.cn/post/7124573626161954823" target="_blank" rel="noreferrer">前端架构带你 封装axios，一次封装终身受益「美团后端连连点赞」 - 掘金</a></li><li><a href="https://juejin.cn/post/7090889657721815076" target="_blank" rel="noreferrer">十分钟封装一个好用的axios，省时又省力他不香吗 - 掘金</a></li></ul><div class="warning custom-block"><p class="custom-block-title">个人感受</p><p>基础封装：</p><ul><li>基础请求：get | post | 文件上传等</li><li>错误拦截</li><li>loading 处理</li><li>参数统一</li><li>token 带参；</li></ul><p>高阶封装：</p><ul><li>请求取消</li><li>请求重试</li><li>结合 双 token 无感刷新</li><li>并发队列，避免中断 loading</li></ul></div><p>不过这些东西，很多开源的库已经做的很好了，比如</p><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Falova.js.org%2F" target="_blank" rel="noreferrer">vlovta</a></li><li><a href="https://ahooks.gitee.io/zh-CN/hooks/use-request/index" target="_blank" rel="noreferrer">useRequest-ahooks</a></li></ul><h3 id="typescript-类型体操-高阶知识" tabindex="-1">Typescript 类型体操，高阶知识 <a class="header-anchor" href="#typescript-类型体操-高阶知识" aria-label="Permalink to &quot;Typescript 类型体操，高阶知识&quot;">​</a></h3><ul><li><a href="https://juejin.cn/post/7000560464786620423" target="_blank" rel="noreferrer">TS挑战通关技巧总结，助你打通TS奇经八脉 - 掘金</a></li><li><a href="https://juejin.cn/post/6999280101556748295" target="_blank" rel="noreferrer">TypeScript 类型体操姿势合集&lt;通关总结&gt;--刷完 - 掘金</a></li><li><a href="https://juejin.cn/post/6994102811218673700?utm_source=gold_browser_extension#heading-8" target="_blank" rel="noreferrer">Ts高手篇：22个示例深入讲解Ts最晦涩难懂的高级类型工具 - 掘金</a></li></ul><h2 id="项目-博客推荐" tabindex="-1">项目/博客推荐 <a class="header-anchor" href="#项目-博客推荐" aria-label="Permalink to &quot;项目/博客推荐&quot;">​</a></h2><blockquote><p>值得学习 作者/项目/工具等</p></blockquote><h3 id="博客" tabindex="-1">博客 <a class="header-anchor" href="#博客" aria-label="Permalink to &quot;博客&quot;">​</a></h3><p>看了几个优秀的 vitepress 主题博客：</p><ul><li><a href="https://juejin.cn/post/7196517835380293693" target="_blank" rel="noreferrer">一个简约风的VitePress博客主题 - 掘金</a></li><li><a href="https://sugarat.top/" target="_blank" rel="noreferrer">优秀vitepress-博客主题-粥里有勺糖 | 粥里有勺糖</a></li><li><a href="https://theme.sugarat.top/" target="_blank" rel="noreferrer">@sugarat/theme | @sugarat/theme</a></li></ul><h3 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://juejin.cn/post/7275608678828916755" target="_blank" rel="noreferrer">比 nvm 更好用的 node 版本管理工具 - 掘金</a> 介绍 Volta 的使用，之前的每日笔记中提到过；这篇文章介绍的比较完整；</li><li><a href="https://www.bilibili.com/read/cv18949301/?from=readlist" target="_blank" rel="noreferrer">美化：让 VSCode 高亮显示当前缩进线 - 哔哩哔哩</a> Vs Code 优化配置；</li></ul>',47),c=[i];function y(A,h,D,u,C,F){return a(),l("div",null,c)}const b=s(r,[["render",y]]);export{d as __pageData,b as default};
