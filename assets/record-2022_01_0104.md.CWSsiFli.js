import{_ as a,c as i,ag as e,o as n}from"./chunks/framework.BFjg9GqD.js";const l="/study-everyday/assets/211606-20210918110623443-1111842180.DHxcNEKN.png",g=JSON.parse('{"title":"0104","description":"","frontmatter":{},"headers":[],"relativePath":"record-2022/01/0104.md","filePath":"record-2022/01/0104.md"}'),t={name:"record-2022/01/0104.md"};function p(h,s,o,r,c,k){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="_0104" tabindex="-1">0104 <a class="header-anchor" href="#_0104" aria-label="Permalink to &quot;0104&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/Neofelis_ZH-CN4637223865_1920x1080.jpg" alt=""></p><h2 id="_0104-今日计划" tabindex="-1">0104 今日计划 <a class="header-anchor" href="#_0104-今日计划" aria-label="Permalink to &quot;0104 今日计划&quot;">​</a></h2><blockquote><p>每天工作前/前一天晚上 做好计划：重点工作、自我提升、其他，<a href="https://github.com/cuixiaorui/study-every-day/issues" target="_blank" rel="noreferrer">提交地址</a></p></blockquote><p><strong>重点工作</strong></p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 房源描述-上传</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 页面所有接口、逻辑检查和确认；</li></ul><h2 id="今日总结" tabindex="-1">今日总结 <a class="header-anchor" href="#今日总结" aria-label="Permalink to &quot;今日总结&quot;">​</a></h2><blockquote><p>问题，原因，解决方式，优化，巧妙实现，新知识</p></blockquote><p>看到同事写的代码用于学习</p><ul><li>2 个 div 的高度不一致，导致内容上下错乱</li></ul><p>解决方法：让 2 个div 的高度一致</p><p>我脑海里最直接的方式是：设置 <code>height</code> ，让 2 个 div 高度保持一致；</p><p>其实，还可以有多个方式：<code>padding, margin, line-height</code></p><p>区别在于，如果直接设置 高度，我可能会写 <code>style=height: 32px</code> 这样的代码</p><p>后者的话，利用 原子样式，加个类名即可：<code>clssName=&quot;pdv6&quot;</code> 就可以了</p><ul><li>按钮权限点不支持 <code>permission-code-flex</code> 类名进行控制</li></ul><p>公司的按钮级权限点实际是样式控制的，加了 <code>permission</code> 类名的 行内元素，块元素，表格元素，都可以使用 <code>display: none !important;</code> 的方式隐藏；</p><p>但是，因为是很久以前的代码，因此没有 <code>flex</code> 相关的类名样式控制，但是 权限 code 已经配置好了，我也不想改变自己写好的 flex 布局样式，怎么办？</p><p><strong>包裹</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- old --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- new --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;div permission-code-block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>根据实际业务需要，可以包裹一层或者多层空的块元素，直至满足需求；</p><hr><h2 id="手撕代码-算法" tabindex="-1">手撕代码/算法 <a class="header-anchor" href="#手撕代码-算法" aria-label="Permalink to &quot;手撕代码/算法&quot;">​</a></h2><blockquote><p>防抖节流等各种手写，http和网络，浏览器原理，性能优化，Webpack</p></blockquote><h2 id="好文推荐-面经相关-博客项目推荐" tabindex="-1">好文推荐/面经相关/博客项目推荐 <a class="header-anchor" href="#好文推荐-面经相关-博客项目推荐" aria-label="Permalink to &quot;好文推荐/面经相关/博客项目推荐&quot;">​</a></h2><blockquote><p>有感好文，面经，博客，项目等</p></blockquote><p><img src="`+l+`" alt=""></p><ul><li><a href="https://www.cnblogs.com/strick/p/15223931.html" target="_blank" rel="noreferrer">跳槽一年后的回顾</a> 可以学习一下 六年程序员过去的一年工作安排</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 学习感悟</span></span>
<span class="line"><span>//</span></span>
<span class="line"><span>// 对比我们公司</span></span>
<span class="line"><span>- 后台模板组件：我能想到 的比如 上传、下载、导入、导出、富文本等组件，标准布局的工具样式库</span></span>
<span class="line"><span>- 短链服务：对这方面不太了解</span></span>
<span class="line"><span>- 前端监控系统：我们公司已经有了监控和回溯系统</span></span>
<span class="line"><span>- 挖掘业务优化点：公司的业务优化点，直觉就是 一些查询条件的 UI 设计不好；重构的痛点；</span></span>
<span class="line"><span>- 性能监控：公司有主要面向后端的监控系统</span></span>
<span class="line"><span>- 单元测试：公司有同事已经写了 H5 端的单元测试；但是不好推广，主要因为排期时间不充足；</span></span>
<span class="line"><span>- 通用接口：类似每个项目都封装的 request 库，实际上大部分的请求都是相似的，基本上都是 get/post</span></span>
<span class="line"><span>- 设计方案：后端有标准的设计方案，但是前端还没有标准的设计方案——最直接的影响是，在评估工作量的时候不好评估，容易评不准超时；</span></span>
<span class="line"><span>- 接口日志查询：日志系统</span></span>
<span class="line"><span>- 微前端：后台系统其实是可以作为一个很好的微前端实践例子</span></span>
<span class="line"><span>- bff：当前在使用，主要用于 数据聚合，接口权限控制等；</span></span></code></pre></div><ul><li><a href="https://github.com/shengxinjing/self-employed-workbook" target="_blank" rel="noreferrer">self-employed-workbook</a> 大圣老师的 自由职业工作手册</li></ul><p>拓展阅读：</p><ul><li><a href="https://www.cnblogs.com/strick/p/15394367.html" target="_blank" rel="noreferrer">带团队后的日常思考（七）</a> 有一个系列，可以学习学习</li></ul><h2 id="其他-todos" tabindex="-1">其他/TODOS <a class="header-anchor" href="#其他-todos" aria-label="Permalink to &quot;其他/TODOS&quot;">​</a></h2><p>博客阅读:</p><ul><li><a href="https://github.com/puxiao/notes" target="_blank" rel="noreferrer">puxio/notes</a></li><li><a href="https://github.com/aehyok/2022/tree/main/%E8%BF%87%E5%8E%BB%E7%9A%842021" target="_blank" rel="noreferrer">aehyok/2022</a> 看看这位小伙伴的 2021 每日总结，学习和启发</li><li><a href="https://www.cnblogs.com/strick/p/15394367.html" target="_blank" rel="noreferrer">带团队后的日常思考（七）</a></li></ul>`,35)]))}const u=a(t,[["render",p]]);export{g as __pageData,u as default};
