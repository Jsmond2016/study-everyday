import{o as e,c as l,a as r}from"./app.35cbeb87.js";const a='{"title":"0508","description":"","frontmatter":{},"headers":[{"level":2,"title":"工作","slug":"工作"},{"level":2,"title":"学习","slug":"学习"},{"level":2,"title":"反思","slug":"反思"},{"level":2,"title":"明日计划","slug":"明日计划"}],"relativePath":"record/05/0508.md","lastUpdated":1624932312421}',i={},t=r('<h1 id="_0508"><a class="header-anchor" href="#_0508" aria-hidden="true">#</a> 0508</h1><h2 id="工作"><a class="header-anchor" href="#工作" aria-hidden="true">#</a> 工作</h2><ul><li>前端水印： <ul><li>踩坑：昨天一直在采坑，处理水印位置平移问题；今天经过亮哥指导，推荐了几个使用成熟的 库 作为参考。实际看下来，用不了，还是参考下自己写吧。</li><li>研究发现：参考一个和本次水印需求比较一致的库 <a href="https://github.com/dxcweb/watermark" target="_blank" rel="noopener noreferrer">dxcweb/watermark</a> 和 它的例子 <a href="http://watermark.dxcweb.com/" target="_blank" rel="noopener noreferrer">最安全，最快速的纯前端图片加水印</a>，直到它的原理是 生成小的 水印图平铺在 图片上</li><li>遇到新问题：自己再给图片加水印的时候遇到 黑屏的情况，查资料说一般只有性能瓶颈才可能导致问题。显然是自己的代码写的有问题，但是自己没有看出哪里写的有问题，只能先放一边。用户的图片加个水印就黑了肯定是不可以的。</li><li>解决：后面准备换上面的库改改用的时候，无意改动个小东西，发现自己黑屏问题被自己解决了。原理就是 <code>ctx.createPattern(watermarkCanvas, &#39;repeat&#39;)</code> ，我以为第一个参数只能接收图片，因此我生成水印图后还要转成图片，之后才发现参数可以是 <code>规定要使用的图片、画布或视频元素</code>，即它可以是图片也可以是画布，那就节省了转图片的操作。事后反思，猜测可能是这里消耗了性能导致黑屏。</li></ul></li></ul><h2 id="学习"><a class="header-anchor" href="#学习" aria-hidden="true">#</a> 学习</h2><ul><li>优秀文章：今天弄这个问题都没时间刷抖音了，技术文章没怎么看，诶，不应该不应该！！</li><li>算法：<a href="https://leetcode-cn.com/problems/find-minimum-time-to-finish-all-jobs/" target="_blank" rel="noopener noreferrer">1723. 完成所有工作的最短时间</a></li></ul><h2 id="反思"><a class="header-anchor" href="#反思" aria-hidden="true">#</a> 反思</h2><ul><li>做的不好的 <ul><li>对新知识上手速度很慢，浪费很多时间效率很低。</li></ul></li><li>做的好的</li><li>如何改进 <ul><li>以后得多接触新知识，多实践，锻炼提升自己的快速掌握新知识的能力</li></ul></li></ul><h2 id="明日计划"><a class="header-anchor" href="#明日计划" aria-hidden="true">#</a> 明日计划</h2><ul><li>刷新 PDP</li><li>好好休息</li></ul>',9);i.render=function(r,a,i,h,d,n){return e(),l("div",null,[t])};export default i;export{a as __pageData};
