import{_ as n,c as a,o as s,a as t}from"./app.4ffa465b.js";var p="/study-everyday/assets/0703.685f4e27.jpg",o="/study-everyday/assets/git-emoj.768aaadd.jpg";const m='{"title":"0703","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5DE5\u4F5C","slug":"\u5DE5\u4F5C"},{"level":2,"title":"\u4EFB\u52A1","slug":"\u4EFB\u52A1"},{"level":2,"title":"\u5B66\u4E60","slug":"\u5B66\u4E60"}],"relativePath":"record/07/0703.md","lastUpdated":1640519604315}',e={},c=t('<h1 id="_0703" tabindex="-1">0703 <a class="header-anchor" href="#_0703" aria-hidden="true">#</a></h1><p><img src="'+p+`" alt=""></p><h2 id="\u5DE5\u4F5C" tabindex="-1">\u5DE5\u4F5C <a class="header-anchor" href="#\u5DE5\u4F5C" aria-hidden="true">#</a></h2><p>\u5468\u672B\uFF0C\u4F11\u606F\u3002</p><h2 id="\u4EFB\u52A1" tabindex="-1">\u4EFB\u52A1 <a class="header-anchor" href="#\u4EFB\u52A1" aria-hidden="true">#</a></h2><p>\u6797\u5B50\u7684\u6A21\u62DF\u9762\u8BD5\u51C6\u5907\u548C\u6A21\u62DF\u9762\u8BD5\u3002</p><h2 id="\u5B66\u4E60" tabindex="-1">\u5B66\u4E60 <a class="header-anchor" href="#\u5B66\u4E60" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token comment">// \u7F13\u5B58\u51FD\u6570</span>
<span class="token keyword">let</span> <span class="token function-variable function">memorizeFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> _args <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;cache&#39;</span><span class="token punctuation">,</span> cache<span class="token punctuation">)</span>
        <span class="token keyword">return</span> cache<span class="token punctuation">[</span>_args<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>_args<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b

<span class="token keyword">let</span> addFn <span class="token operator">=</span> <span class="token function">memorizeFn</span><span class="token punctuation">(</span>add<span class="token punctuation">)</span>

<span class="token keyword">const</span> r1 <span class="token operator">=</span> <span class="token function">addFn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> r2 <span class="token operator">=</span> <span class="token function">addFn</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> r3 <span class="token operator">=</span> <span class="token function">addFn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> r4 <span class="token operator">=</span> <span class="token function">addFn</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;r2&#39;</span><span class="token punctuation">,</span> r2<span class="token punctuation">)</span>
</code></pre></div><ul><li>git \u63D0\u4EA4\u597D\u770B\u7684\u8868\u60C5</li></ul><p><img src="`+o+'" alt=""></p>',10),l=[c];function u(r,k,i,d,_,h){return s(),a("div",null,l)}var g=n(e,[["render",u]]);export{m as __pageData,g as default};
