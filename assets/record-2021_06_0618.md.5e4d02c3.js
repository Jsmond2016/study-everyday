import{_ as a,o as s,c as l,O as e}from"./chunks/framework.6305ff1a.js";const y=JSON.parse('{"title":"0618","description":"","frontmatter":{},"headers":[],"relativePath":"record-2021/06/0618.md","filePath":"record-2021/06/0618.md"}'),o={name:"record-2021/06/0618.md"},n=e(`<h1 id="_0618" tabindex="-1">0618 <a class="header-anchor" href="#_0618" aria-label="Permalink to &quot;0618&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/BorregoBadlands_ZH-CN9913349081_1920x1080.jpg" alt=""></p><h2 id="工作" tabindex="-1">工作 <a class="header-anchor" href="#工作" aria-label="Permalink to &quot;工作&quot;">​</a></h2><ul><li>前后端联调</li><li>对照测试点自测排查问题</li><li>坑：移动端使用 scrollTop 失效问题 必须要使用兼容性的写法</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scroll</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pageYOffset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="任务" tabindex="-1">任务 <a class="header-anchor" href="#任务" aria-label="Permalink to &quot;任务&quot;">​</a></h2><ul><li>vue 源码视频</li><li>算法题：<a href="https://leetcode-cn.com/problems/valid-parentheses/" target="_blank" rel="noreferrer">有效的括号</a></li></ul><h2 id="反思" tabindex="-1">反思 <a class="header-anchor" href="#反思" aria-label="Permalink to &quot;反思&quot;">​</a></h2><ul><li>源码难啃：这几天看视频发现，越到后面核心的地方，越是难理解。看来需要自己多做笔记，梳理成自己的知识体系才能更深的理解源码的思想。</li><li>周年自省：在新公司工作一年了，总计 2 年工作经验，此时，自己的技能，知识点，简历，都应该更新了，回顾这一年自己的成长，比去年的自己进步了吗，掌握了新知识吗？是否能够去面大厂试一试？</li></ul><h2 id="明日计划" tabindex="-1">明日计划 <a class="header-anchor" href="#明日计划" aria-label="Permalink to &quot;明日计划&quot;">​</a></h2><ul><li>周末计划，vue 源码学习。</li></ul><hr><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/JecbLP-mqWApWvFex20U_Q" target="_blank" rel="noreferrer">千万小心升级 React 17，刚踩了个大坑！</a> 工作中正在开发的项目就是 React 17，提前踩坑。</li></ul><h2 id="专题学习-骨架屏" tabindex="-1">专题学习：骨架屏 <a class="header-anchor" href="#专题学习-骨架屏" aria-label="Permalink to &quot;专题学习：骨架屏&quot;">​</a></h2><p>骨架屏原理和实现：</p><ul><li><a href="https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/270" target="_blank" rel="noreferrer">如何实现骨架屏，说说你的思路</a></li><li><a href="https://juejin.cn/post/6844903696254533640" target="_blank" rel="noreferrer">首页白屏的引发的思考(一)</a> 作者解释了骨架屏的好处和实现原理，以及简单的代码实现</li><li><a href="https://juejin.cn/post/6844903693674872840" target="_blank" rel="noreferrer">前端骨架屏方案小结</a></li><li><a href="https://github.com/ElemeFE/page-skeleton-webpack-plugin" target="_blank" rel="noreferrer">page-skeleton-webpack-plugin</a> 饿了么骨架屏方案</li><li><a href="https://juejin.cn/post/6943020826627145735" target="_blank" rel="noreferrer">80行代码实现Vue骨架屏</a> 骨架屏实现新思路，拦截 vue 的渲染流程，拿到 dom 后添加类名（设置样式）的方式实现骨架屏</li></ul><p>小结：</p><ul><li>思路一的原理：使用 puppteer 无头浏览器在服务端生成页面，隐藏图片文字等信息（使用 css 方式覆盖），提取变灰色的 HTML,CSS，返回即可。</li><li>思路二的原理：拦截 vue 的渲染流程，拿到 dom 后添加类名（设置样式）的方式实现骨架屏</li></ul><h2 id="todos" tabindex="-1">TODOS <a class="header-anchor" href="#todos" aria-label="Permalink to &quot;TODOS&quot;">​</a></h2><ul><li>Nestjs</li><li>Docker，Nginx，DevOps 学习</li></ul>`,21),r=[n];function t(p,c,i,h,d,u){return s(),l("div",null,r)}const F=a(o,[["render",t]]);export{y as __pageData,F as default};
