import{_ as e,c as a,o as r,a3 as t}from"./chunks/framework.B1tUqxYT.js";const _=JSON.parse('{"title":"0730","description":"","frontmatter":{},"headers":[],"relativePath":"record-2021/07/0730.md","filePath":"record-2021/07/0730.md"}'),l={name:"record-2021/07/0730.md"},i=t('<h1 id="_0730" tabindex="-1">0730 <a class="header-anchor" href="#_0730" aria-label="Permalink to &quot;0730&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/RainbowMountain_ZH-CN9670076890_1920x1080.jpg" alt=""></p><h2 id="工作" tabindex="-1">工作 <a class="header-anchor" href="#工作" aria-label="Permalink to &quot;工作&quot;">​</a></h2><ul><li>拖拽方案：</li></ul><p>Tabs 需要拖拽，看了 AntD 的官网方案，使用的是 <a href="https://ant.design/components/tabs-cn/#components-tabs-demo-custom-tab-bar-node" target="_blank" rel="noreferrer">可拖拽标签-React-DND</a> 方案</p><p>同事大牛已经实现了一个版本，我今天才开始看，对 API 还是比较陌生的。</p><p>社区关于 拖拽有几种：</p><ul><li><a href="https://ahooks.js.org/zh-CN/hooks/ui/use-drop" target="_blank" rel="noreferrer">umi 的拖拽 hook</a> 6.7k star</li><li><a href="https://github.com/react-dnd/react-dnd" target="_blank" rel="noreferrer">React-DND</a> 16.2k star</li><li><a href="https://react-beautiful-dnd.netlify.app" target="_blank" rel="noreferrer">react-beautiful-dnd</a> 24.4k star</li></ul><p>其他问题：</p><ul><li>组件设计：昨天的那个组件设计问题，今天和 2 个同事讨论了下，个人比较偏向老前端的做法，只有最外层的组件需要 connect，里面的子组件接受传入的值即可，一些改变 数据流的动作，可以单独定义，如果很多组件都使用到了，考虑抽离一个类似的工具函数，传入 dispatch 和 参数，解决组件外 使用 dispatch 问题。</li><li>不可变数据传递：多人协作时，因为不知道别人的组件设计细节，因此传给他们的组件的数据，如果是从 model 取出来的，尽可能做一次深拷贝再丢进去。因为今天就遇到了 别人的组件使用我的数据发现数据是 只读 的，因为数据是从 model 取出来的，因为是 model 的数据，都是不可变的，都用 observable 包装过了 isExtensible，因此无法使用 <code>obj.xxx = yyy</code> 或 <code>list.push(item)</code> 等方式改变数据，会报错。</li></ul><p>说明：</p><p>深浅拷贝：</p><ul><li>数组是一个引用，其使用 concat 和 slice 都是浅拷贝</li><li>使用 JSON.stringify 序列化和反序列化才是 深拷贝，但是有局限性；</li><li>最好的方式，使用 lodash 的 cloneDeep 方法</li></ul><h2 id="反思" tabindex="-1">反思 <a class="header-anchor" href="#反思" aria-label="Permalink to &quot;反思&quot;">​</a></h2><ul><li>7 月就要过去了，感觉这个月自己的空余时间花费了太多在工作上，或许也是侧面反应近期工作强度有点大，加班有点多了。这样对自己不太好，没有休闲时间和充电时间；同时，工作中遇到的问题都是比较简单的问题，不是特别值得记录，成长比较有限。</li><li>7 月自己制定的个人目标，没有实现；每天应该坚持的算法打卡也没有坚持下来； <ul><li>算法这东西，在还没有建立成熟的思考方式前就中断了，后面又得重新捡起来。</li><li>源码学习也放下了，即使是周末，也没有尽可能充分利用好时间；</li><li>工作中的学习：发现，如果要成长，工作中遇到的问题需要即时记录，因为前端大佬每天都加班，白天他没时间教你，通常都是晚上加班间隙，比较好问问题，大佬也比较闲；说实话，这个和以前学习是一样的，老师白天要给每一个同学上课，你若又不懂得问题，需要课后自己虚心讨教，比较耐心的老师，会不惜用自己的下班时间给你讲解...工作中也是一样的，保持好奇心~~</li></ul></li></ul><p>教训：</p><ul><li>工作任务评估，实事求是，评估尽可能准确，同时保持一定的弹性时间应对其他问题（开会，技术实现复杂，代码优化，学习他人代码等）</li><li></li></ul><hr><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/iomDg1Qg_1kKEkeo9EzbGQ" target="_blank" rel="noreferrer">从零搭建Webpack5-react脚手架(附源码)</a></li><li><a href="https://mp.weixin.qq.com/s/7ssYpD9R8PnfqvZZE-7XAQ" target="_blank" rel="noreferrer">Module Federation 你的浪漫我来懂</a></li><li><a href="https://juejin.cn/post/6965860856311578637" target="_blank" rel="noreferrer">万字长文带你彻底搞懂什么是 DevOps</a></li><li><a href="https://juejin.cn/post/6989973871663251487" target="_blank" rel="noreferrer">基于 vue3 + webpack 5 + sass+ vw 适配方案+axios 封装，从0构建手机端模板脚手架</a></li></ul><h2 id="项目推荐" tabindex="-1">项目推荐 <a class="header-anchor" href="#项目推荐" aria-label="Permalink to &quot;项目推荐&quot;">​</a></h2><p>移动端组件库 学习：</p><ul><li><a href="https://github.com/dengwb1991/owl-ui" target="_blank" rel="noreferrer">https://github.com/dengwb1991/owl-ui</a></li><li><a href="https://github.com/xiaojun1994/unique-ui" target="_blank" rel="noreferrer">https://github.com/xiaojun1994/unique-ui</a></li></ul><p>相关博客：<a href="https://juejin.cn/post/6844903847148650503" target="_blank" rel="noreferrer">UI组件库从1到N开发心得-组件篇</a></p><h2 id="todos" tabindex="-1">TODOS <a class="header-anchor" href="#todos" aria-label="Permalink to &quot;TODOS&quot;">​</a></h2>',25),o=[i];function n(s,h,c,u,p,d){return r(),a("div",null,o)}const f=e(l,[["render",n]]);export{_ as __pageData,f as default};
