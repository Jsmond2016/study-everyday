import{_ as a,c as l,a2 as r,o as t}from"./chunks/framework.ek9jOonm.js";const d=JSON.parse('{"title":"1104","description":"","frontmatter":{},"headers":[],"relativePath":"record-2021/11/1104.md","filePath":"record-2021/11/1104.md"}'),i={name:"record-2021/11/1104.md"};function o(p,e,n,h,c,u){return t(),l("div",null,e[0]||(e[0]=[r('<h1 id="_1104" tabindex="-1">1104 <a class="header-anchor" href="#_1104" aria-label="Permalink to &quot;1104&quot;">​</a></h1><p><img src="http://h2.ioliu.cn/bing/MackenzieRiver_ZH-CN0214805768_1920x1080.jpg" alt=""></p><h2 id="工作" tabindex="-1">工作 <a class="header-anchor" href="#工作" aria-label="Permalink to &quot;工作&quot;">​</a></h2><h2 id="今日算法" tabindex="-1">今日算法 <a class="header-anchor" href="#今日算法" aria-label="Permalink to &quot;今日算法&quot;">​</a></h2><p>今日学习：</p><p>排序和搜索——各种排序算法和二分搜索模板</p><p>考察范围：</p><ul><li>常见的排序算法和二分搜索</li><li>二维数组的排序和搜索</li></ul><hr><ul><li>347 前K个高频元素</li><li>215 数组中的第K个最大元素</li><li>162 寻找峰值</li><li><ol start="34"><li>在排序数组中查找元素的第一个和最后一个位置</li></ol></li><li>56 合并区间</li><li>33 搜索旋转排序数组</li><li>240 搜索二维矩阵</li></ul><p>今日复习：</p><h2 id="温故知新" tabindex="-1">温故知新 <a class="header-anchor" href="#温故知新" aria-label="Permalink to &quot;温故知新&quot;">​</a></h2><blockquote><p>防抖节流，http 握手，缓存，各种手写</p></blockquote><h2 id="好文推荐" tabindex="-1">好文推荐 <a class="header-anchor" href="#好文推荐" aria-label="Permalink to &quot;好文推荐&quot;">​</a></h2><blockquote><p>有感好文</p></blockquote><ul><li><a href="https://docker.easydoc.net/doc/81170005/cCewZWoN/lTKfePfP" target="_blank" rel="noreferrer">Docker 快速上手教程</a>，<a href="https://www.bilibili.com/video/BV11L411g7U1?p=1" target="_blank" rel="noreferrer">学习视频</a></li><li><a href="https://github.com/xiaoxiaojx/blog/issues/20" target="_blank" rel="noreferrer">巨石应用解决方案</a></li><li><a href="https://beta.reactjs.org/" target="_blank" rel="noreferrer">react 最新的文档</a></li><li><a href="https://github.com/xiaoxiaojx/blog/issues" target="_blank" rel="noreferrer">node 源码解析</a></li></ul><h2 id="项目推荐" tabindex="-1">项目推荐 <a class="header-anchor" href="#项目推荐" aria-label="Permalink to &quot;项目推荐&quot;">​</a></h2><blockquote><p>值得学习的项目</p></blockquote><ul><li><a href="https://github.com/Codennnn/vue-color-avatar" target="_blank" rel="noreferrer">随机生成头像</a></li></ul><h2 id="面经相关" tabindex="-1">面经相关 <a class="header-anchor" href="#面经相关" aria-label="Permalink to &quot;面经相关&quot;">​</a></h2><blockquote><p>八股文相关</p></blockquote><ul><li><p>面试算法常见题目（待整理）</p><ul><li>dp：背包，硬币问，股票的最佳时机</li></ul></li><li><p>面试官：你是怎么看源码的？</p></li></ul><p>回答：</p><p>第一遍：看社区的一些大佬的源码分析，有 vue 源码的注释版，理解起核心思想； 第二遍：拉最新的代码，秉承二八原则，吃透核心的 20% 的代码，以 debug 方式理解，尽可能覆盖全面；</p><p>如果给自己打分，你会给自己打多少分？80 分左右，主要的核心思想和代码都看过理解过巴拉巴拉</p><p>不能回答太高90，太自负了，面试官给你出个题目没答出来就 pass 了 不能回答太低60，太自卑了，面试官看扁你了，自己对自己的学习成果不自信</p><ul><li>三年两跳的原因是什么？你的职业规划是什么？</li></ul><p>回答方向：</p><p>必须要清晰！你为什么要有这个职业规划？</p><ul><li>面试可能不会出算法题，但是 js 手写题需要注意，例如 手写 数组的 sort 实现——插入排序和快排</li><li>如果有，准备好个人网站和博客，会看你的 掘金博客</li><li>面试官：为什么你的目标薪酬定的这么高？翻三倍翻、四倍?</li></ul><p>我为了进入对方公司准备了很长时间，和周边大厂的朋友进行过模拟面试，他们根据我的能力对照大厂的能力评级对应的薪资范围进行评估建议，所以我才要这个薪资数额；</p>',31)]))}const b=a(i,[["render",o]]);export{d as __pageData,b as default};
