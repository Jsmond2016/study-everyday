import{_ as a,c as e,o as n,a as s}from"./app.e89b6480.js";const t='{"title":"算法题初中高级分类整理","description":"","frontmatter":{},"headers":[{"level":2,"title":"数组和字符串","slug":"数组和字符串"},{"level":3,"title":"删除排序数组中的重复项","slug":"删除排序数组中的重复项"},{"level":3,"title":"买卖股票的最佳时机 II","slug":"买卖股票的最佳时机-ii"},{"level":3,"title":"旋转数组","slug":"旋转数组"},{"level":3,"title":"存在重复元素","slug":"存在重复元素"},{"level":3,"title":"只出现一次的数字","slug":"只出现一次的数字"},{"level":3,"title":"两个数组的交集 II","slug":"两个数组的交集-ii"},{"level":3,"title":"加一","slug":"加一"},{"level":3,"title":"移动零","slug":"移动零"},{"level":3,"title":"两数之和","slug":"两数之和"},{"level":3,"title":"有效的数独","slug":"有效的数独"},{"level":3,"title":"旋转图像","slug":"旋转图像"},{"level":3,"title":"反转字符串","slug":"反转字符串"},{"level":3,"title":"整数反转","slug":"整数反转"},{"level":3,"title":"字符串中的第一个唯一字符","slug":"字符串中的第一个唯一字符"},{"level":3,"title":"有效的字母异位词","slug":"有效的字母异位词"},{"level":3,"title":"验证回文串","slug":"验证回文串"},{"level":3,"title":"字符串转换整数 (atoi)","slug":"字符串转换整数-atoi"},{"level":3,"title":"实现 strStr()","slug":"实现-strstr"},{"level":3,"title":"外观数列","slug":"外观数列"},{"level":3,"title":"最长公共前缀","slug":"最长公共前缀"},{"level":3,"title":"三数之和","slug":"三数之和"},{"level":3,"title":"矩阵置零","slug":"矩阵置零"},{"level":3,"title":"字母异位词分组","slug":"字母异位词分组"},{"level":3,"title":"无重复字符的最长子串","slug":"无重复字符的最长子串"},{"level":3,"title":"最长回文子串","slug":"最长回文子串"},{"level":3,"title":"递增的三元子序列","slug":"递增的三元子序列"},{"level":3,"title":"除自身以外数组的乘积","slug":"除自身以外数组的乘积"},{"level":3,"title":"螺旋矩阵","slug":"螺旋矩阵"},{"level":3,"title":"四数相加 II","slug":"四数相加-ii"},{"level":3,"title":"盛最多水的容器","slug":"盛最多水的容器"},{"level":3,"title":"生命游戏","slug":"生命游戏"},{"level":3,"title":"缺失的第一个正数","slug":"缺失的第一个正数"},{"level":3,"title":"最长连续序列","slug":"最长连续序列"},{"level":3,"title":"寻找重复数","slug":"寻找重复数"},{"level":3,"title":"基本计算器 II","slug":"基本计算器-ii"},{"level":3,"title":"滑动窗口最大值","slug":"滑动窗口最大值"},{"level":3,"title":"最小覆盖子串","slug":"最小覆盖子串"},{"level":2,"title":"链表","slug":"链表"},{"level":3,"title":"删除链表中的节点","slug":"删除链表中的节点"},{"level":3,"title":"删除链表的倒数第N个节点","slug":"删除链表的倒数第n个节点"},{"level":3,"title":"反转链表","slug":"反转链表"},{"level":3,"title":"合并两个有序链表","slug":"合并两个有序链表"},{"level":3,"title":"回文链表","slug":"回文链表"},{"level":3,"title":"环形链表","slug":"环形链表"},{"level":3,"title":"两数相加","slug":"两数相加"},{"level":3,"title":"奇偶链表","slug":"奇偶链表"},{"level":3,"title":"相交链表","slug":"相交链表"},{"level":3,"title":"合并K个排序链表","slug":"合并k个排序链表"},{"level":3,"title":"排序链表","slug":"排序链表"},{"level":3,"title":"复制带随机指针的链表","slug":"复制带随机指针的链表"},{"level":2,"title":"树和图","slug":"树和图"},{"level":3,"title":"二叉树的最大深度","slug":"二叉树的最大深度"},{"level":3,"title":"验证二叉搜索树","slug":"验证二叉搜索树"},{"level":3,"title":"对称二叉树","slug":"对称二叉树"},{"level":3,"title":"二叉树的层序遍历","slug":"二叉树的层序遍历"},{"level":3,"title":"将有序数组转换为二叉搜索树","slug":"将有序数组转换为二叉搜索树"},{"level":3,"title":"二叉树的中序遍历","slug":"二叉树的中序遍历"},{"level":3,"title":"二叉树的锯齿形层次遍历","slug":"二叉树的锯齿形层次遍历"},{"level":3,"title":"从前序与中序遍历序列构造二叉树","slug":"从前序与中序遍历序列构造二叉树"},{"level":3,"title":"填充每个节点的下一个右侧节点指针","slug":"填充每个节点的下一个右侧节点指针"},{"level":3,"title":"二叉搜索树中第K小的元素","slug":"二叉搜索树中第k小的元素"},{"level":3,"title":"岛屿数量","slug":"岛屿数量"},{"level":3,"title":"单词接龙","slug":"单词接龙"},{"level":3,"title":"被围绕的区域","slug":"被围绕的区域"},{"level":3,"title":"二叉树的最近公共祖先","slug":"二叉树的最近公共祖先"},{"level":3,"title":"二叉树中的最大路径和","slug":"二叉树中的最大路径和"},{"level":3,"title":"朋友圈","slug":"朋友圈"},{"level":3,"title":"课程表","slug":"课程表"},{"level":3,"title":"课程表 II","slug":"课程表-ii"},{"level":3,"title":"矩阵中的最长递增路径","slug":"矩阵中的最长递增路径"},{"level":3,"title":"计算右侧小于当前元素的个数","slug":"计算右侧小于当前元素的个数"},{"level":2,"title":"回溯算法","slug":"回溯算法"},{"level":3,"title":"电话号码的字母组合","slug":"电话号码的字母组合"},{"level":3,"title":"括号生成","slug":"括号生成"},{"level":3,"title":"全排列","slug":"全排列"},{"level":3,"title":"子集","slug":"子集"},{"level":3,"title":"单词搜索","slug":"单词搜索"},{"level":3,"title":"分割回文串","slug":"分割回文串"},{"level":3,"title":"单词搜索 II","slug":"单词搜索-ii"},{"level":3,"title":"删除无效的括号","slug":"删除无效的括号"},{"level":3,"title":"通配符匹配","slug":"通配符匹配"},{"level":3,"title":"正则表达式匹配","slug":"正则表达式匹配"},{"level":2,"title":"排序和搜索","slug":"排序和搜索"},{"level":3,"title":"合并两个有序数组","slug":"合并两个有序数组"},{"level":3,"title":"第一个错误的版本","slug":"第一个错误的版本"},{"level":3,"title":"颜色分类","slug":"颜色分类"},{"level":3,"title":"前 K 个高频元素","slug":"前-k-个高频元素"},{"level":3,"title":"数组中的第K个最大元素","slug":"数组中的第k个最大元素"},{"level":3,"title":"寻找峰值","slug":"寻找峰值"},{"level":3,"title":"在排序数组中查找元素的第一个和最后一个位置","slug":"在排序数组中查找元素的第一个和最后一个位置"},{"level":3,"title":"合并区间","slug":"合并区间"},{"level":3,"title":"搜索旋转排序数组","slug":"搜索旋转排序数组"},{"level":3,"title":"搜索二维矩阵 II","slug":"搜索二维矩阵-ii"},{"level":3,"title":"摆动排序 II","slug":"摆动排序-ii"},{"level":3,"title":"有序矩阵中第K小的元素","slug":"有序矩阵中第k小的元素"},{"level":3,"title":"寻找两个正序数组的中位数","slug":"寻找两个正序数组的中位数"},{"level":2,"title":"动态规划","slug":"动态规划"},{"level":3,"title":"爬楼梯","slug":"爬楼梯"},{"level":3,"title":"买卖股票的最佳时机","slug":"买卖股票的最佳时机"},{"level":3,"title":"最大子序和","slug":"最大子序和"},{"level":3,"title":"打家劫舍","slug":"打家劫舍"},{"level":3,"title":"跳跃游戏","slug":"跳跃游戏"},{"level":3,"title":"不同路径","slug":"不同路径"},{"level":3,"title":"零钱兑换","slug":"零钱兑换"},{"level":3,"title":"最长上升子序列","slug":"最长上升子序列"},{"level":3,"title":"乘积最大子数组","slug":"乘积最大子数组"},{"level":3,"title":"最佳买卖股票时机含冷冻期","slug":"最佳买卖股票时机含冷冻期"},{"level":3,"title":"完全平方数","slug":"完全平方数"},{"level":3,"title":"单词拆分","slug":"单词拆分"},{"level":3,"title":"单词拆分 II","slug":"单词拆分-ii"},{"level":3,"title":"戳气球","slug":"戳气球"},{"level":2,"title":"设计问题","slug":"设计问题"},{"level":3,"title":"打乱数组","slug":"打乱数组"},{"level":3,"title":"最小栈","slug":"最小栈"},{"level":3,"title":"二叉树的序列化与反序列化","slug":"二叉树的序列化与反序列化"},{"level":3,"title":"常数时间插入、删除和获取随机元素","slug":"常数时间插入、删除和获取随机元素"},{"level":3,"title":"LRU缓存机制","slug":"lru缓存机制"},{"level":3,"title":"实现 Trie (前缀树)","slug":"实现-trie-前缀树"},{"level":3,"title":"扁平化嵌套列表迭代器","slug":"扁平化嵌套列表迭代器"},{"level":3,"title":"数据流的中位数","slug":"数据流的中位数"},{"level":2,"title":"数学","slug":"数学"},{"level":3,"title":"Fizz Buzz","slug":"fizz-buzz"},{"level":3,"title":"计数质数","slug":"计数质数"},{"level":3,"title":"3的幂","slug":"_3的幂"},{"level":3,"title":"罗马数字转整数","slug":"罗马数字转整数"},{"level":3,"title":"快乐数","slug":"快乐数"},{"level":3,"title":"阶乘后的零","slug":"阶乘后的零"},{"level":3,"title":"Excel表列序号","slug":"excel表列序号"},{"level":3,"title":"Pow(x n)","slug":"pow-x-n"},{"level":3,"title":"x 的平方根","slug":"x-的平方根"},{"level":3,"title":"两数相除","slug":"两数相除"},{"level":3,"title":"分数到小数","slug":"分数到小数"},{"level":3,"title":"最大数","slug":"最大数"},{"level":3,"title":"直线上最多的点数","slug":"直线上最多的点数"},{"level":2,"title":"其他","slug":"其他"},{"level":3,"title":"位1的个数","slug":"位1的个数"},{"level":3,"title":"汉明距离","slug":"汉明距离"},{"level":3,"title":"颠倒二进制位","slug":"颠倒二进制位"},{"level":3,"title":"杨辉三角","slug":"杨辉三角"},{"level":3,"title":"有效的括号","slug":"有效的括号"},{"level":3,"title":"缺失数字","slug":"缺失数字"},{"level":3,"title":"两整数之和","slug":"两整数之和"},{"level":3,"title":"逆波兰表达式求值","slug":"逆波兰表达式求值"},{"level":3,"title":"多数元素","slug":"多数元素"},{"level":3,"title":"任务调度器","slug":"任务调度器"},{"level":3,"title":"根据身高重建队列","slug":"根据身高重建队列"},{"level":3,"title":"接雨水","slug":"接雨水"},{"level":3,"title":"天际线问题","slug":"天际线问题"},{"level":3,"title":"柱状图中最大的矩形","slug":"柱状图中最大的矩形"}],"relativePath":"record/read-notes/leetcode-category.md","lastUpdated":1636775483730}',l={},i=[s('<h1 id="算法题初中高级分类整理" tabindex="-1">算法题初中高级分类整理 <a class="header-anchor" href="#算法题初中高级分类整理" aria-hidden="true">#</a></h1><blockquote><p>共计 141 道题</p></blockquote><ul><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-easy/" target="_blank" rel="noopener noreferrer">初级算法</a></li><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-medium/" target="_blank" rel="noopener noreferrer">中级算法</a></li><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions-hard/" target="_blank" rel="noopener noreferrer">高级算法</a></li><li><a href="https://leetcode-cn.com/leetbook/detail/top-interview-questions/" target="_blank" rel="noopener noreferrer">未整理-算法面试题汇总</a></li><li><a href="https://github.com/Jsmond2016/Leetcode-retag" target="_blank" rel="noopener noreferrer">Leetcode-retag</a> 重新分类 Leetcode 高频题 2021 版</li></ul><p>模板：</p><div class="language-"><pre><code>- 题目描述\n- 解题方法\n  - 思路\n  - 注意要点\n  - 代码\nJavaScript 版本\nJava 版本\nGo 版本\n</code></pre></div><p>Plan：</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 完成上述 【初中高级和面试题】所有算法，并添加整理题解；</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 分类整理方法，每个专题添加 【出题方向】【题型总结】，可以参考 <a href="https://github.com/Jsmond2016/Leetcode-retag" target="_blank" rel="noopener noreferrer">Leetcode-retag</a></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 参考 <a href="https://jsmond2016.github.io/leetcode/" target="_blank" rel="noopener noreferrer">数据结构和算法学习</a> 的目标阶段逐步完成</li></ul><h2 id="数组和字符串" tabindex="-1">数组和字符串 <a class="header-anchor" href="#数组和字符串" aria-hidden="true">#</a></h2><p>初级：</p><h3 id="删除排序数组中的重复项" tabindex="-1">删除排序数组中的重复项 <a class="header-anchor" href="#删除排序数组中的重复项" aria-hidden="true">#</a></h3><blockquote><p><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener noreferrer">26. 删除有序数组中的重复项</a></p></blockquote><ul><li>题目描述</li><li>解题方法1 <ul><li>思路：利用双指针思想</li><li>注意要点</li></ul></li></ul><p>javascript 版本</p><div class="language-javascript"><pre><code><span class="token comment">/**\n * @param {number[]} nums\n * @return {number}\n */</span>\n<span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length\n    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> right <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> right <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">!==</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            nums<span class="token punctuation">[</span><span class="token operator">++</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> left <span class="token operator">+</span> <span class="token number">1</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p>java 版本</p><p>go 版本</p><ul><li>解题方法2 <ul><li>思路：利用哈希的唯一性</li><li>代码-js版本</li></ul></li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            hash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n            nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n            j <span class="token operator">++</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> j\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="买卖股票的最佳时机-ii" tabindex="-1">买卖股票的最佳时机 II <a class="header-anchor" href="#买卖股票的最佳时机-ii" aria-hidden="true">#</a></h3><ul><li>题目描述：</li><li>解题方法 <ul><li>思路</li><li>代码</li></ul></li></ul><p>JavaScript 版本</p><div class="language-js"><pre><code><span class="token comment">/**\n * @param {number[]} prices\n * @return {number}\n */</span>\n<span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> n <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            ans <span class="token operator">+=</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> ans\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="旋转数组" tabindex="-1">旋转数组 <a class="header-anchor" href="#旋转数组" aria-hidden="true">#</a></h3><h3 id="存在重复元素" tabindex="-1">存在重复元素 <a class="header-anchor" href="#存在重复元素" aria-hidden="true">#</a></h3><h3 id="只出现一次的数字" tabindex="-1">只出现一次的数字 <a class="header-anchor" href="#只出现一次的数字" aria-hidden="true">#</a></h3><h3 id="两个数组的交集-ii" tabindex="-1">两个数组的交集 II <a class="header-anchor" href="#两个数组的交集-ii" aria-hidden="true">#</a></h3><h3 id="加一" tabindex="-1">加一 <a class="header-anchor" href="#加一" aria-hidden="true">#</a></h3><h3 id="移动零" tabindex="-1">移动零 <a class="header-anchor" href="#移动零" aria-hidden="true">#</a></h3><h3 id="两数之和" tabindex="-1">两数之和 <a class="header-anchor" href="#两数之和" aria-hidden="true">#</a></h3><h3 id="有效的数独" tabindex="-1">有效的数独 <a class="header-anchor" href="#有效的数独" aria-hidden="true">#</a></h3><h3 id="旋转图像" tabindex="-1">旋转图像 <a class="header-anchor" href="#旋转图像" aria-hidden="true">#</a></h3><blockquote><p>字符串部分：</p></blockquote><h3 id="反转字符串" tabindex="-1">反转字符串 <a class="header-anchor" href="#反转字符串" aria-hidden="true">#</a></h3><h3 id="整数反转" tabindex="-1">整数反转 <a class="header-anchor" href="#整数反转" aria-hidden="true">#</a></h3><h3 id="字符串中的第一个唯一字符" tabindex="-1">字符串中的第一个唯一字符 <a class="header-anchor" href="#字符串中的第一个唯一字符" aria-hidden="true">#</a></h3><h3 id="有效的字母异位词" tabindex="-1">有效的字母异位词 <a class="header-anchor" href="#有效的字母异位词" aria-hidden="true">#</a></h3><h3 id="验证回文串" tabindex="-1">验证回文串 <a class="header-anchor" href="#验证回文串" aria-hidden="true">#</a></h3><h3 id="字符串转换整数-atoi" tabindex="-1">字符串转换整数 (atoi) <a class="header-anchor" href="#字符串转换整数-atoi" aria-hidden="true">#</a></h3><h3 id="实现-strstr" tabindex="-1">实现 strStr() <a class="header-anchor" href="#实现-strstr" aria-hidden="true">#</a></h3><h3 id="外观数列" tabindex="-1">外观数列 <a class="header-anchor" href="#外观数列" aria-hidden="true">#</a></h3><h3 id="最长公共前缀" tabindex="-1">最长公共前缀 <a class="header-anchor" href="#最长公共前缀" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="三数之和" tabindex="-1">三数之和 <a class="header-anchor" href="#三数之和" aria-hidden="true">#</a></h3><h3 id="矩阵置零" tabindex="-1">矩阵置零 <a class="header-anchor" href="#矩阵置零" aria-hidden="true">#</a></h3><h3 id="字母异位词分组" tabindex="-1">字母异位词分组 <a class="header-anchor" href="#字母异位词分组" aria-hidden="true">#</a></h3><h3 id="无重复字符的最长子串" tabindex="-1">无重复字符的最长子串 <a class="header-anchor" href="#无重复字符的最长子串" aria-hidden="true">#</a></h3><h3 id="最长回文子串" tabindex="-1">最长回文子串 <a class="header-anchor" href="#最长回文子串" aria-hidden="true">#</a></h3><h3 id="递增的三元子序列" tabindex="-1">递增的三元子序列 <a class="header-anchor" href="#递增的三元子序列" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="除自身以外数组的乘积" tabindex="-1">除自身以外数组的乘积 <a class="header-anchor" href="#除自身以外数组的乘积" aria-hidden="true">#</a></h3><h3 id="螺旋矩阵" tabindex="-1">螺旋矩阵 <a class="header-anchor" href="#螺旋矩阵" aria-hidden="true">#</a></h3><h3 id="四数相加-ii" tabindex="-1">四数相加 II <a class="header-anchor" href="#四数相加-ii" aria-hidden="true">#</a></h3><h3 id="盛最多水的容器" tabindex="-1">盛最多水的容器 <a class="header-anchor" href="#盛最多水的容器" aria-hidden="true">#</a></h3><h3 id="生命游戏" tabindex="-1">生命游戏 <a class="header-anchor" href="#生命游戏" aria-hidden="true">#</a></h3><h3 id="缺失的第一个正数" tabindex="-1">缺失的第一个正数 <a class="header-anchor" href="#缺失的第一个正数" aria-hidden="true">#</a></h3><h3 id="最长连续序列" tabindex="-1">最长连续序列 <a class="header-anchor" href="#最长连续序列" aria-hidden="true">#</a></h3><h3 id="寻找重复数" tabindex="-1">寻找重复数 <a class="header-anchor" href="#寻找重复数" aria-hidden="true">#</a></h3><h3 id="基本计算器-ii" tabindex="-1">基本计算器 II <a class="header-anchor" href="#基本计算器-ii" aria-hidden="true">#</a></h3><h3 id="滑动窗口最大值" tabindex="-1">滑动窗口最大值 <a class="header-anchor" href="#滑动窗口最大值" aria-hidden="true">#</a></h3><h3 id="最小覆盖子串" tabindex="-1">最小覆盖子串 <a class="header-anchor" href="#最小覆盖子串" aria-hidden="true">#</a></h3><h2 id="链表" tabindex="-1">链表 <a class="header-anchor" href="#链表" aria-hidden="true">#</a></h2><p>初级：</p><h3 id="删除链表中的节点" tabindex="-1">删除链表中的节点 <a class="header-anchor" href="#删除链表中的节点" aria-hidden="true">#</a></h3><h3 id="删除链表的倒数第n个节点" tabindex="-1">删除链表的倒数第N个节点 <a class="header-anchor" href="#删除链表的倒数第n个节点" aria-hidden="true">#</a></h3><h3 id="反转链表" tabindex="-1">反转链表 <a class="header-anchor" href="#反转链表" aria-hidden="true">#</a></h3><h3 id="合并两个有序链表" tabindex="-1">合并两个有序链表 <a class="header-anchor" href="#合并两个有序链表" aria-hidden="true">#</a></h3><h3 id="回文链表" tabindex="-1">回文链表 <a class="header-anchor" href="#回文链表" aria-hidden="true">#</a></h3><h3 id="环形链表" tabindex="-1">环形链表 <a class="header-anchor" href="#环形链表" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="两数相加" tabindex="-1">两数相加 <a class="header-anchor" href="#两数相加" aria-hidden="true">#</a></h3><h3 id="奇偶链表" tabindex="-1">奇偶链表 <a class="header-anchor" href="#奇偶链表" aria-hidden="true">#</a></h3><h3 id="相交链表" tabindex="-1">相交链表 <a class="header-anchor" href="#相交链表" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="合并k个排序链表" tabindex="-1">合并K个排序链表 <a class="header-anchor" href="#合并k个排序链表" aria-hidden="true">#</a></h3><h3 id="排序链表" tabindex="-1">排序链表 <a class="header-anchor" href="#排序链表" aria-hidden="true">#</a></h3><h3 id="复制带随机指针的链表" tabindex="-1">复制带随机指针的链表 <a class="header-anchor" href="#复制带随机指针的链表" aria-hidden="true">#</a></h3><h2 id="树和图" tabindex="-1">树和图 <a class="header-anchor" href="#树和图" aria-hidden="true">#</a></h2><p>初级：</p><h3 id="二叉树的最大深度" tabindex="-1">二叉树的最大深度 <a class="header-anchor" href="#二叉树的最大深度" aria-hidden="true">#</a></h3><h3 id="验证二叉搜索树" tabindex="-1">验证二叉搜索树 <a class="header-anchor" href="#验证二叉搜索树" aria-hidden="true">#</a></h3><h3 id="对称二叉树" tabindex="-1">对称二叉树 <a class="header-anchor" href="#对称二叉树" aria-hidden="true">#</a></h3><h3 id="二叉树的层序遍历" tabindex="-1">二叉树的层序遍历 <a class="header-anchor" href="#二叉树的层序遍历" aria-hidden="true">#</a></h3><h3 id="将有序数组转换为二叉搜索树" tabindex="-1">将有序数组转换为二叉搜索树 <a class="header-anchor" href="#将有序数组转换为二叉搜索树" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="二叉树的中序遍历" tabindex="-1">二叉树的中序遍历 <a class="header-anchor" href="#二叉树的中序遍历" aria-hidden="true">#</a></h3><h3 id="二叉树的锯齿形层次遍历" tabindex="-1">二叉树的锯齿形层次遍历 <a class="header-anchor" href="#二叉树的锯齿形层次遍历" aria-hidden="true">#</a></h3><h3 id="从前序与中序遍历序列构造二叉树" tabindex="-1">从前序与中序遍历序列构造二叉树 <a class="header-anchor" href="#从前序与中序遍历序列构造二叉树" aria-hidden="true">#</a></h3><h3 id="填充每个节点的下一个右侧节点指针" tabindex="-1">填充每个节点的下一个右侧节点指针 <a class="header-anchor" href="#填充每个节点的下一个右侧节点指针" aria-hidden="true">#</a></h3><h3 id="二叉搜索树中第k小的元素" tabindex="-1">二叉搜索树中第K小的元素 <a class="header-anchor" href="#二叉搜索树中第k小的元素" aria-hidden="true">#</a></h3><h3 id="岛屿数量" tabindex="-1">岛屿数量 <a class="header-anchor" href="#岛屿数量" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="单词接龙" tabindex="-1">单词接龙 <a class="header-anchor" href="#单词接龙" aria-hidden="true">#</a></h3><h3 id="被围绕的区域" tabindex="-1">被围绕的区域 <a class="header-anchor" href="#被围绕的区域" aria-hidden="true">#</a></h3><h3 id="二叉树的最近公共祖先" tabindex="-1">二叉树的最近公共祖先 <a class="header-anchor" href="#二叉树的最近公共祖先" aria-hidden="true">#</a></h3><h3 id="二叉树中的最大路径和" tabindex="-1">二叉树中的最大路径和 <a class="header-anchor" href="#二叉树中的最大路径和" aria-hidden="true">#</a></h3><h3 id="朋友圈" tabindex="-1">朋友圈 <a class="header-anchor" href="#朋友圈" aria-hidden="true">#</a></h3><h3 id="课程表" tabindex="-1">课程表 <a class="header-anchor" href="#课程表" aria-hidden="true">#</a></h3><h3 id="课程表-ii" tabindex="-1">课程表 II <a class="header-anchor" href="#课程表-ii" aria-hidden="true">#</a></h3><h3 id="矩阵中的最长递增路径" tabindex="-1">矩阵中的最长递增路径 <a class="header-anchor" href="#矩阵中的最长递增路径" aria-hidden="true">#</a></h3><h3 id="计算右侧小于当前元素的个数" tabindex="-1">计算右侧小于当前元素的个数 <a class="header-anchor" href="#计算右侧小于当前元素的个数" aria-hidden="true">#</a></h3><h2 id="回溯算法" tabindex="-1">回溯算法 <a class="header-anchor" href="#回溯算法" aria-hidden="true">#</a></h2><p>中级：</p><h3 id="电话号码的字母组合" tabindex="-1">电话号码的字母组合 <a class="header-anchor" href="#电话号码的字母组合" aria-hidden="true">#</a></h3><h3 id="括号生成" tabindex="-1">括号生成 <a class="header-anchor" href="#括号生成" aria-hidden="true">#</a></h3><h3 id="全排列" tabindex="-1">全排列 <a class="header-anchor" href="#全排列" aria-hidden="true">#</a></h3><h3 id="子集" tabindex="-1">子集 <a class="header-anchor" href="#子集" aria-hidden="true">#</a></h3><h3 id="单词搜索" tabindex="-1">单词搜索 <a class="header-anchor" href="#单词搜索" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="分割回文串" tabindex="-1">分割回文串 <a class="header-anchor" href="#分割回文串" aria-hidden="true">#</a></h3><h3 id="单词搜索-ii" tabindex="-1">单词搜索 II <a class="header-anchor" href="#单词搜索-ii" aria-hidden="true">#</a></h3><h3 id="删除无效的括号" tabindex="-1">删除无效的括号 <a class="header-anchor" href="#删除无效的括号" aria-hidden="true">#</a></h3><h3 id="通配符匹配" tabindex="-1">通配符匹配 <a class="header-anchor" href="#通配符匹配" aria-hidden="true">#</a></h3><h3 id="正则表达式匹配" tabindex="-1">正则表达式匹配 <a class="header-anchor" href="#正则表达式匹配" aria-hidden="true">#</a></h3><h2 id="排序和搜索" tabindex="-1">排序和搜索 <a class="header-anchor" href="#排序和搜索" aria-hidden="true">#</a></h2><h3 id="合并两个有序数组" tabindex="-1">合并两个有序数组 <a class="header-anchor" href="#合并两个有序数组" aria-hidden="true">#</a></h3><h3 id="第一个错误的版本" tabindex="-1">第一个错误的版本 <a class="header-anchor" href="#第一个错误的版本" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="颜色分类" tabindex="-1">颜色分类 <a class="header-anchor" href="#颜色分类" aria-hidden="true">#</a></h3><h3 id="前-k-个高频元素" tabindex="-1">前 K 个高频元素 <a class="header-anchor" href="#前-k-个高频元素" aria-hidden="true">#</a></h3><h3 id="数组中的第k个最大元素" tabindex="-1">数组中的第K个最大元素 <a class="header-anchor" href="#数组中的第k个最大元素" aria-hidden="true">#</a></h3><h3 id="寻找峰值" tabindex="-1">寻找峰值 <a class="header-anchor" href="#寻找峰值" aria-hidden="true">#</a></h3><h3 id="在排序数组中查找元素的第一个和最后一个位置" tabindex="-1">在排序数组中查找元素的第一个和最后一个位置 <a class="header-anchor" href="#在排序数组中查找元素的第一个和最后一个位置" aria-hidden="true">#</a></h3><h3 id="合并区间" tabindex="-1">合并区间 <a class="header-anchor" href="#合并区间" aria-hidden="true">#</a></h3><h3 id="搜索旋转排序数组" tabindex="-1">搜索旋转排序数组 <a class="header-anchor" href="#搜索旋转排序数组" aria-hidden="true">#</a></h3><h3 id="搜索二维矩阵-ii" tabindex="-1">搜索二维矩阵 II <a class="header-anchor" href="#搜索二维矩阵-ii" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="摆动排序-ii" tabindex="-1">摆动排序 II <a class="header-anchor" href="#摆动排序-ii" aria-hidden="true">#</a></h3><h3 id="有序矩阵中第k小的元素" tabindex="-1">有序矩阵中第K小的元素 <a class="header-anchor" href="#有序矩阵中第k小的元素" aria-hidden="true">#</a></h3><h3 id="寻找两个正序数组的中位数" tabindex="-1">寻找两个正序数组的中位数 <a class="header-anchor" href="#寻找两个正序数组的中位数" aria-hidden="true">#</a></h3><h2 id="动态规划" tabindex="-1">动态规划 <a class="header-anchor" href="#动态规划" aria-hidden="true">#</a></h2><h3 id="爬楼梯" tabindex="-1">爬楼梯 <a class="header-anchor" href="#爬楼梯" aria-hidden="true">#</a></h3><h3 id="买卖股票的最佳时机" tabindex="-1">买卖股票的最佳时机 <a class="header-anchor" href="#买卖股票的最佳时机" aria-hidden="true">#</a></h3><h3 id="最大子序和" tabindex="-1">最大子序和 <a class="header-anchor" href="#最大子序和" aria-hidden="true">#</a></h3><h3 id="打家劫舍" tabindex="-1">打家劫舍 <a class="header-anchor" href="#打家劫舍" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="跳跃游戏" tabindex="-1">跳跃游戏 <a class="header-anchor" href="#跳跃游戏" aria-hidden="true">#</a></h3><h3 id="不同路径" tabindex="-1">不同路径 <a class="header-anchor" href="#不同路径" aria-hidden="true">#</a></h3><h3 id="零钱兑换" tabindex="-1">零钱兑换 <a class="header-anchor" href="#零钱兑换" aria-hidden="true">#</a></h3><h3 id="最长上升子序列" tabindex="-1">最长上升子序列 <a class="header-anchor" href="#最长上升子序列" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="乘积最大子数组" tabindex="-1">乘积最大子数组 <a class="header-anchor" href="#乘积最大子数组" aria-hidden="true">#</a></h3><h3 id="最佳买卖股票时机含冷冻期" tabindex="-1">最佳买卖股票时机含冷冻期 <a class="header-anchor" href="#最佳买卖股票时机含冷冻期" aria-hidden="true">#</a></h3><h3 id="完全平方数" tabindex="-1">完全平方数 <a class="header-anchor" href="#完全平方数" aria-hidden="true">#</a></h3><h3 id="单词拆分" tabindex="-1">单词拆分 <a class="header-anchor" href="#单词拆分" aria-hidden="true">#</a></h3><h3 id="单词拆分-ii" tabindex="-1">单词拆分 II <a class="header-anchor" href="#单词拆分-ii" aria-hidden="true">#</a></h3><h3 id="戳气球" tabindex="-1">戳气球 <a class="header-anchor" href="#戳气球" aria-hidden="true">#</a></h3><h2 id="设计问题" tabindex="-1">设计问题 <a class="header-anchor" href="#设计问题" aria-hidden="true">#</a></h2><h3 id="打乱数组" tabindex="-1">打乱数组 <a class="header-anchor" href="#打乱数组" aria-hidden="true">#</a></h3><h3 id="最小栈" tabindex="-1">最小栈 <a class="header-anchor" href="#最小栈" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="二叉树的序列化与反序列化" tabindex="-1">二叉树的序列化与反序列化 <a class="header-anchor" href="#二叉树的序列化与反序列化" aria-hidden="true">#</a></h3><h3 id="常数时间插入、删除和获取随机元素" tabindex="-1">常数时间插入、删除和获取随机元素 <a class="header-anchor" href="#常数时间插入、删除和获取随机元素" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="lru缓存机制" tabindex="-1">LRU缓存机制 <a class="header-anchor" href="#lru缓存机制" aria-hidden="true">#</a></h3><h3 id="实现-trie-前缀树" tabindex="-1">实现 Trie (前缀树) <a class="header-anchor" href="#实现-trie-前缀树" aria-hidden="true">#</a></h3><h3 id="扁平化嵌套列表迭代器" tabindex="-1">扁平化嵌套列表迭代器 <a class="header-anchor" href="#扁平化嵌套列表迭代器" aria-hidden="true">#</a></h3><h3 id="数据流的中位数" tabindex="-1">数据流的中位数 <a class="header-anchor" href="#数据流的中位数" aria-hidden="true">#</a></h3><h2 id="数学" tabindex="-1">数学 <a class="header-anchor" href="#数学" aria-hidden="true">#</a></h2><h3 id="fizz-buzz" tabindex="-1">Fizz Buzz <a class="header-anchor" href="#fizz-buzz" aria-hidden="true">#</a></h3><h3 id="计数质数" tabindex="-1">计数质数 <a class="header-anchor" href="#计数质数" aria-hidden="true">#</a></h3><h3 id="_3的幂" tabindex="-1">3的幂 <a class="header-anchor" href="#_3的幂" aria-hidden="true">#</a></h3><h3 id="罗马数字转整数" tabindex="-1">罗马数字转整数 <a class="header-anchor" href="#罗马数字转整数" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="快乐数" tabindex="-1">快乐数 <a class="header-anchor" href="#快乐数" aria-hidden="true">#</a></h3><h3 id="阶乘后的零" tabindex="-1">阶乘后的零 <a class="header-anchor" href="#阶乘后的零" aria-hidden="true">#</a></h3><h3 id="excel表列序号" tabindex="-1">Excel表列序号 <a class="header-anchor" href="#excel表列序号" aria-hidden="true">#</a></h3><h3 id="pow-x-n" tabindex="-1">Pow(x n) <a class="header-anchor" href="#pow-x-n" aria-hidden="true">#</a></h3><h3 id="x-的平方根" tabindex="-1">x 的平方根 <a class="header-anchor" href="#x-的平方根" aria-hidden="true">#</a></h3><h3 id="两数相除" tabindex="-1">两数相除 <a class="header-anchor" href="#两数相除" aria-hidden="true">#</a></h3><h3 id="分数到小数" tabindex="-1">分数到小数 <a class="header-anchor" href="#分数到小数" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="最大数" tabindex="-1">最大数 <a class="header-anchor" href="#最大数" aria-hidden="true">#</a></h3><h3 id="直线上最多的点数" tabindex="-1">直线上最多的点数 <a class="header-anchor" href="#直线上最多的点数" aria-hidden="true">#</a></h3><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-hidden="true">#</a></h2><h3 id="位1的个数" tabindex="-1">位1的个数 <a class="header-anchor" href="#位1的个数" aria-hidden="true">#</a></h3><h3 id="汉明距离" tabindex="-1">汉明距离 <a class="header-anchor" href="#汉明距离" aria-hidden="true">#</a></h3><h3 id="颠倒二进制位" tabindex="-1">颠倒二进制位 <a class="header-anchor" href="#颠倒二进制位" aria-hidden="true">#</a></h3><h3 id="杨辉三角" tabindex="-1">杨辉三角 <a class="header-anchor" href="#杨辉三角" aria-hidden="true">#</a></h3><h3 id="有效的括号" tabindex="-1">有效的括号 <a class="header-anchor" href="#有效的括号" aria-hidden="true">#</a></h3><h3 id="缺失数字" tabindex="-1">缺失数字 <a class="header-anchor" href="#缺失数字" aria-hidden="true">#</a></h3><p>中级：</p><h3 id="两整数之和" tabindex="-1">两整数之和 <a class="header-anchor" href="#两整数之和" aria-hidden="true">#</a></h3><h3 id="逆波兰表达式求值" tabindex="-1">逆波兰表达式求值 <a class="header-anchor" href="#逆波兰表达式求值" aria-hidden="true">#</a></h3><h3 id="多数元素" tabindex="-1">多数元素 <a class="header-anchor" href="#多数元素" aria-hidden="true">#</a></h3><h3 id="任务调度器" tabindex="-1">任务调度器 <a class="header-anchor" href="#任务调度器" aria-hidden="true">#</a></h3><p>高级：</p><h3 id="根据身高重建队列" tabindex="-1">根据身高重建队列 <a class="header-anchor" href="#根据身高重建队列" aria-hidden="true">#</a></h3><h3 id="接雨水" tabindex="-1">接雨水 <a class="header-anchor" href="#接雨水" aria-hidden="true">#</a></h3><h3 id="天际线问题" tabindex="-1">天际线问题 <a class="header-anchor" href="#天际线问题" aria-hidden="true">#</a></h3><h3 id="柱状图中最大的矩形" tabindex="-1">柱状图中最大的矩形 <a class="header-anchor" href="#柱状图中最大的矩形" aria-hidden="true">#</a></h3>',190)];var r=a(l,[["render",function(a,s,t,l,r,h){return n(),e("div",null,i)}]]);export{t as __pageData,r as default};
